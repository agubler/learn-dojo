{"version":3,"sources":["webpack://learn_dojo/WeakMap.ts","webpack://learn_dojo/Set.ts","webpack://learn_dojo/object.ts","webpack://learn_dojo/Map.ts","webpack://learn_dojo/Destroyable.ts","webpack://learn_dojo/Evented.ts","webpack://learn_dojo/Registry.ts","webpack://learn_dojo/diff.ts","webpack://learn_dojo/RegistryHandler.ts","webpack://learn_dojo/vdom.ts","webpack://learn_dojo/HashHistory.ts","webpack://learn_dojo/Router.ts","webpack://learn_dojo/StateHistory.ts","webpack://learn_dojo/./src/site-config.ts","webpack://learn_dojo/injector.ts","webpack://learn_dojo/cache.ts","webpack://learn_dojo/Outlet.ts","webpack://learn_dojo/icache.ts","webpack://learn_dojo/block.ts","webpack://learn_dojo/Link.ts","webpack://learn_dojo/./node_modules/@dojo/webpack-contrib/build-time-render/bridge.js","webpack://learn_dojo/./src/widgets/article/Article.tsx","webpack://learn_dojo/./src/utils/formatter.ts","webpack://learn_dojo/./src/templates/blog-post/BlogPost.tsx","webpack://learn_dojo/./src/pages/Blog.tsx","webpack://learn_dojo/IntersectionObserver.ts","webpack://learn_dojo/intersection.ts","webpack://learn_dojo/./src/widgets/card/Card.tsx","webpack://learn_dojo/./node_modules/@dojo/webpack-contrib/build-time-render/bridge.js?b22c","webpack://learn_dojo/./src/blog-list/BlogList.tsx","webpack://learn_dojo/./src/widgets/footer/Footer.tsx","webpack://learn_dojo/./src/widgets/header/Header.tsx","webpack://learn_dojo/./src/widgets/hero/Hero.tsx","webpack://learn_dojo/./src/widgets/signup/SignUp.tsx","webpack://learn_dojo/./src/layouts/Layout.tsx","webpack://learn_dojo/./src/App.tsx","webpack://learn_dojo/./src/main.tsx","webpack://learn_dojo/RouterInjector.ts","webpack://learn_dojo/wrapper.ts","webpack://learn_dojo/./src/widgets/article/Article.m.css","webpack://learn_dojo/./src/pages/Blog.m.css","webpack://learn_dojo/./src/widgets/card/Card.m.css","webpack://learn_dojo/./src/widgets/footer/Footer.m.css","webpack://learn_dojo/./src/widgets/header/Header.m.css","webpack://learn_dojo/./src/widgets/hero/Hero.m.css","webpack://learn_dojo/./src/widgets/signup/SignUp.m.css","webpack://learn_dojo/./src/layouts/Layout.m.css"],"names":["shim_WeakMap","global","WeakMap","shim_Set","Set","object_assign","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","is","keys","getOwnPropertyDescriptors","object_entries","values","Object","assign","entries","Map","shim_Map","noop","Promise","resolve","destroyed","Error","Destroyable_Destroyable","[object Object]","this","handles","handle","_handles","push","splice","indexOf","destroy","forEach","own","regexMap","Evented_Evented","listenersMap","event","methods","type","globString","targetString","regex","has","get","RegExp","replace","set","test","isGlobMatch","method","call","listener","Array","isArray","map","_addListener","listeners","core_Evented","WIDGET_BASE_TYPE","isWidgetBaseConstructor","item","Boolean","_type","isWidgetFunction","isWidget","isWNodeFactory","node","isFactory","Registry_Registry","widgetLabel","emit","action","label","undefined","_widgetRegistry","toString","then","widgetCtor","emitLoadedEvent","error","injectorFactory","_injectorRegistry","invalidator","injectorItem","injector","promise","hasOwnProperty","default","isWidgetConstructorDefaultExport","hasInjector","core_Registry","isObjectOrArray","value","prototype","reference","previousProperty","newProperty","changed","auto","result","ignore","shallow","depth","validOldProperty","validNewProperty","previousKeys","newKeys","length","some","key","core_RegistryHandler","super","_registry","_registryWidgetLabelMap","_registryInjectorLabelMap","baseRegistry","delete","base","widget","define","defineInjector","globalPrecedence","_get","getFunctionName","labelMap","registries","i","registry","registeredLabels","on","EMPTY_ARRAY","nodeOperations","NAMESPACE_SVG","NAMESPACE_W3","NAMESPACE_XLINK","WNODE","VNODE","DOMVNODE","isTextNode","nodeType","isWNodeWrapper","child","isWNode","isVNodeWrapper","isVNode","isVirtualWrapper","tag","isBodyWrapper","wrapper","isDomVNode","w","widgetConstructorOrNode","properties","children","widgetConstructor","v","propertiesOrChildren","deferredPropertiesCallback","classes","styles","newProperties","__rest","_a","nodeClasses","nodeStyles","nodeProperties","REGISTRY_ITEM","FromRegistry","spreadChildren","reduce","tsx","__autoRegistryItem","name","buildPreviousProperties","domNode","current","diffType","attributes","deferredProperties","events","propName","attrName","getAttribute","props","property","same","dnode1","dnode2","widgetConstructor1","registryItem","widgetConstructor2","instance","findIndexOfChild","sameAs","start","createClassPropValue","classNames","className","updateAttribute","attrValue","namespace","setAttributeNS","removeAttribute","setAttribute","arrayFrom","arr","slice","createFactory","callback","middlewares","factory","create","returns","widgetInstanceMap","widgetMetaMap","requestedDomNodes","wrapperId","metaId","addNodeToMap","id","widgetMeta","nodeMap","destroyHandles","meta","destroyMap","middlewareIds","size","clear","vdom_invalidator","widgetId","split","vdom_node","mountNode","contains","add","diffProperty","propertyName","diff","customDiffMap","customDiffProperties","propertyDiffMap","vdom_destroy","destroyFunction","getRegistry","registryHandler","defer","isDeferred","deferRefs","vdom","renderer","_renderScheduled","parentInvalidate","_mountOptions","sync","merge","transition","document","body","_invalidationQueue","_processQueue","_deferredProcessQueue","_applicationQueue","_eventMap","_idToWrapperMap","_wrapperSiblingMap","_idToChildrenWrappers","_insertBeforeMap","_nodeToWrapperMap","_idleCallbacks","_deferredRenderCallbacks","_allMergedNodes","nodeOperation","propValue","previousValue","updateEvent","eventName","currentValue","previousEvent","removeEventListener","evt","target","addEventListener","removeOrphanedEvents","previousProperties","onlyEvents","isEvent","substr","eventCallback","resolveRegistryItem","owningNode","instanceData","registryLabel","isLazyDefine","renderedToWrapper","rendered","parent","currentParent","requiresInsertBefore","hasPreviousSiblings","wrappedRendered","hasParentWNode","hasVirtualParentNode","hasCurrentParentChildren","insertBefore","previousItem","nodes","pop","mapNodeToInstance","renderedItem","text","order","parentId","exitAnimation","hasAnimations","nextParent","owningId","runDeferredProperties","next","processProperties","findInsertBefore","searchNode","nextSibling","childDomWrapperId","childWrapper","parentNode","setValue","domValue","onInputValue","onSelectValue","setProperties","currentProperties","nextWrapper","includesEventsAndAttributes","propNames","propCount","previousClassString","currentClassString","merged","domClasses","styleNames","styleCount","j","styleName","newStyleValue","style","tagName","lastIndexOf","previousAttributes","attrNames","attrCount","updateAttributes","_schedule","_runInvalidationQueue","requestAnimationFrame","getWNodeWrapper","invalidationQueue","previouslyRendered","sort","a","b","_runProcessQueue","sibling","_updateWidget","_runDomInstructionQueue","_cleanUpMergedNodes","_runCallbacks","mergedNode","removeChild","setDomNodeOnParentWrapper","_process","reverse","parentDomNode","onAttach","parentElement","enterAnimation","enterAnimationActive","enter","owningWrapper","nodeHandler","inserted","currentDomNode","replaceChild","exitAnimationActive","exit","attached","addRoot","onDetach","callbacks","run","shift","requestIdleCallback","setTimeout","runAfterRenderCallbacks","runDeferredRenderCallbacks","createKeyMap","wrappers","mergeNodes","oldIndex","newIndex","currentLength","nextLength","instructions","currentKeys","nextKeys","currentWrapper","domElement","toUpperCase","mergeNodeIndex","_processMergeNodes","_processOne","dom","currentNode","parentWrapper","findParentDomNode","isVirtual","isBody","data","createTextNode","childNodes","createElementNS","createElement","_createDom","invalidate","Constructor","dirty","rendering","__setProperties__","__setChildren__","__render__","middleware","ids","resolveMiddleware","results","uniqueId","payload","resolvedMiddleware","_createWidget","currentChildren","_updateDom","remove","bodyIds","wrapperChildren","_removeDom","processResult","_removeWidget","didRender","diffMap","runDiffs","ignoreProperties","propertyNames","propertiesDiff","nextChildren","mount","mountOptions","renderResult","wrapNodes","siblingId","HashHistory_HashHistory","window","onChange","_onChange","path","normalizePath","_window","location","hash","_current","_onChangeFunction","prefix","PARAM","paramRegExp","ROUTE_SEGMENT_SCORE","DYNAMIC_SEGMENT_PENALTY","matchingParams","params","previousParams","every","Router_Router","config","options","_routes","_outletMap","_matchedOutlets","_currentParams","_currentQueryParams","requestedPath","_stripLeadingSlash","previousMatchedOutlets","queryParamString","_getQueryParams","segments","routeConfig","routeConfigs","route","matchedRoutes","segmentIndex","paramIndex","routeMatch","segment","childRoute","matchedOutletName","matchedRoute","match","score","outlet","matchedOutlet","queryParams","isError","isExact","previousMatchedOutlet","errorOutlet","previousMatchedOutletKeys","context","_options","_register","autostart","_history","HistoryManager","_defaultOutlet","link","setPath","linkPath","fullPath","fullQueryParams","param","index","defaultParams","fullParams","outletIdentifier","currentParams","routes","parentRoute","defaultRoute","parsedPath","queryParam","queryParameters","trailingSlash","leadingSlash","stripBase","sanatizePath","StateHistory_StateHistory","pathName","pathname","_base","search","TypeError","history","pushState","_setBasePath","site_config_meta","title","author","description","footerLinks","href","logo","middleware_injector","injector_injectorFactory","getInjector","middleware_cache","cache_factory","cacheMap","routing_Outlet","cache","Outlet_factory","routerKey","subscribe","currentRouterKey","currentHandle","router","outletContext","getOutlet","middleware_icache","icache_factory","cachedValue","status","middleware_block","icache","blockFactory","module","args","argsString","JSON","stringify","moduleId","getOrSet","async","pause","resume","routing_Link","Link_factory","to","isOutlet","onClick","Link_rest","linkProps","onclick","defaultPrevented","button","metaKey","ctrlKey","preventDefault","modulePath","bridge","arguments","__dojoBuildBridge","stringifiedArgs","__dojoBuildBridgeCache","Article","Article_m","formatter","Intl","DateTimeFormat","year","month","day","dateFormatter","date","format","BlogPost","block","includes","post","Date","srcset","cover_image","src","alt","loading","aria-label","content","Blog","Blog_m","IntersectionObserver","util_wrapper","defaultIntersection","freeze","intersectionRatio","isIntersecting","middleware_intersection","intersection_factory","_createDetails","rootNode","observer","detailEntries","root","details","disconnect","_getDetails","observe","Card_factory","intersection","Card","viewed","imgSrc","Card_m","bridge_modulePath","build_time_render_bridge","BlogList","blog","file","Footer_dateFormatter","createLinks","links","Footer_m","rel","asImage","Footer","d","buildTime","getFullYear","Header","Header_m","Hero","Hero_m","SignUp","SignUp_m","novalidate","for","placeholder","Layout","Layout_m","App","siteMeta","matchDetails","main_registry","main_router","routerOptions","RouterInjector_rest","registerRouterInjector","r","main_domNode","getElementById","scroll","__webpack_require__","__webpack_exports__","_global__WEBPACK_IMPORTED_MODULE_0__","nameOnGlobal","constructor","bind","exports"," _key","column","image","email","form","gridcontainer","gdpr","gdprcheck","checkbox","info","input","fieldset","submit","section"],"mappings":"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","file":"main.cd4f32baab1f58e637a3.bundle.js","sourcesContent":["import global from './global';\n`!has('es6-iterator')`;\nimport { isArrayLike, Iterable } from './iterator';\nimport has from '../core/has';\n`!has('es6-symbol')`;\nimport './Symbol';\n\nexport interface WeakMap<K extends object, V> {\n\t/**\n\t * Remove a `key` from the map\n\t *\n\t * @param key The key to remove\n\t * @return `true` if the value was removed, otherwise `false`\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Retrieve the value, based on the supplied `key`\n\t *\n\t * @param key The key to retrieve the `value` for\n\t * @return the `value` based on the `key` if found, otherwise `false`\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Determines if a `key` is present in the map\n\t *\n\t * @param key The `key` to check\n\t * @return `true` if the key is part of the map, otherwise `false`.\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Set a `value` for a particular `key`.\n\t *\n\t * @param key The `key` to set the `value` for\n\t * @param value The `value` to set\n\t * @return the instances\n\t */\n\tset(key: K, value: V): this;\n\n\treadonly [Symbol.toStringTag]: 'WeakMap';\n}\n\nexport interface WeakMapConstructor {\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t */\n\tnew (): WeakMap<object, any>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable?: [K, V][]): WeakMap<K, V>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable: Iterable<[K, V]>): WeakMap<K, V>;\n\n\treadonly prototype: WeakMap<object, any>;\n}\n\nexport let WeakMap: WeakMapConstructor = global.WeakMap;\n\ninterface Entry<K, V> {\n\tkey: K;\n\tvalue: V;\n}\n\nif (!has('es6-weakmap')) {\n\tconst DELETED: any = {};\n\n\tconst getUID = function getUID(): number {\n\t\treturn Math.floor(Math.random() * 100000000);\n\t};\n\n\tconst generateName = (function() {\n\t\tlet startId = Math.floor(Date.now() % 100000000);\n\n\t\treturn function generateName(): string {\n\t\t\treturn '__wm' + getUID() + (startId++ + '__');\n\t\t};\n\t})();\n\n\tWeakMap = global.WeakMap = class WeakMap<K, V> {\n\t\tprivate readonly _name: string;\n\t\tprivate readonly _frozenEntries: Entry<K, V>[];\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tthis._name = generateName();\n\n\t\t\tthis._frozenEntries = [];\n\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst item = iterable[i];\n\t\t\t\t\t\tthis.set(item[0], item[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const [key, value] of iterable) {\n\t\t\t\t\t\tthis.set(key, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate _getFrozenEntryIndex(key: any): number {\n\t\t\tfor (let i = 0; i < this._frozenEntries.length; i++) {\n\t\t\t\tif (this._frozenEntries[i].key === key) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn -1;\n\t\t}\n\n\t\tdelete(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\tentry.value = DELETED;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\tthis._frozenEntries.splice(frozenIndex, 1);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tget(key: any): V | undefined {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\treturn entry.value;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn this._frozenEntries[frozenIndex].value;\n\t\t\t}\n\t\t}\n\n\t\thas(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (Boolean(entry && entry.key === key && entry.value !== DELETED)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tset(key: any, value?: any): this {\n\t\t\tif (!key || (typeof key !== 'object' && typeof key !== 'function')) {\n\t\t\t\tthrow new TypeError('Invalid value used as weak map key');\n\t\t\t}\n\t\t\tlet entry: Entry<K, V> = key[this._name];\n\t\t\tif (!entry || entry.key !== key) {\n\t\t\t\tentry = Object.create(null, {\n\t\t\t\t\tkey: { value: key }\n\t\t\t\t});\n\n\t\t\t\tif (Object.isFrozen(key)) {\n\t\t\t\t\tthis._frozenEntries.push(entry);\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty(key, this._name, {\n\t\t\t\t\t\tvalue: entry\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tentry.value = value;\n\t\t\treturn this;\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'WeakMap' = 'WeakMap';\n\t};\n}\n\nexport default WeakMap;\n","import global from './global';\n`!has('es6-iterator')`;\nimport { isArrayLike, Iterable, IterableIterator, ShimIterator } from './iterator';\nimport has from '../core/has';\n`!has('es6-symbol')`;\nimport './Symbol';\n\nexport interface Set<T> {\n\t/**\n\t * Adds a `value` to the `Set`\n\t *\n\t * @param value The value to add to the set\n\t * @returns The instance of the `Set`\n\t */\n\tadd(value: T): this;\n\n\t/**\n\t * Removes all the values from the `Set`.\n\t */\n\tclear(): void;\n\n\t/**\n\t * Removes a `value` from the set\n\t *\n\t * @param value The value to be removed\n\t * @returns `true` if the value was removed\n\t */\n\tdelete(value: T): boolean;\n\n\t/**\n\t * Returns an iterator that yields each entry.\n\t *\n\t * @return An iterator for each key/value pair in the instance.\n\t */\n\tentries(): IterableIterator<[T, T]>;\n\n\t/**\n\t * Executes a given function for each set entry. The function\n\t * is invoked with three arguments: the element value, the\n\t * element key, and the associated `Set` instance.\n\t *\n\t * @param callbackfn The function to execute for each map entry,\n\t * @param thisArg The value to use for `this` for each execution of the calback\n\t */\n\tforEach(callbackfn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any): void;\n\n\t/**\n\t * Identifies if a value is part of the set.\n\t *\n\t * @param value The value to check\n\t * @returns `true` if the value is part of the set otherwise `false`\n\t */\n\thas(value: T): boolean;\n\n\t/**\n\t * Despite its name, returns an iterable of the values in the set,\n\t */\n\tkeys(): IterableIterator<T>;\n\n\t/**\n\t * Returns the number of values in the `Set`.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * Returns an iterable of values in the set.\n\t */\n\tvalues(): IterableIterator<T>;\n\n\t/** Iterates over values in the set. */\n\t[Symbol.iterator](): IterableIterator<T>;\n\n\treadonly [Symbol.toStringTag]: 'Set';\n}\n\nexport interface SetConstructor {\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t */\n\tnew (): Set<any>;\n\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t *\n\t * @param iterator The iterable structure to initialize the set with\n\t */\n\tnew <T>(iterator?: T[]): Set<T>;\n\n\t/**\n\t * Creates a new Set\n\t *\n\t * @constructor\n\t *\n\t * @param iterator The iterable structure to initialize the set with\n\t */\n\tnew <T>(iterator: Iterable<T>): Set<T>;\n\n\treadonly prototype: Set<any>;\n}\n\nexport let Set: SetConstructor = global.Set;\n\nif (!has('es6-set')) {\n\tSet = global.Set = class Set<T> {\n\t\tprivate readonly _setData: T[] = [];\n\n\t\tstatic [Symbol.species] = Set;\n\n\t\tconstructor(iterable?: ArrayLike<T> | Iterable<T>) {\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tthis.add(iterable[i]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\t\tthis.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tadd(value: T): this {\n\t\t\tif (this.has(value)) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tthis._setData.push(value);\n\t\t\treturn this;\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis._setData.length = 0;\n\t\t}\n\n\t\tdelete(value: T): boolean {\n\t\t\tconst idx = this._setData.indexOf(value);\n\t\t\tif (idx === -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._setData.splice(idx, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\tentries(): IterableIterator<[T, T]> {\n\t\t\treturn new ShimIterator<[any, any]>(this._setData.map<[any, any]>((value) => [value, value]));\n\t\t}\n\n\t\tforEach(callbackfn: (value: T, index: T, set: Set<T>) => void, thisArg?: any): void {\n\t\t\tconst iterator = this.values();\n\t\t\tlet result = iterator.next();\n\t\t\twhile (!result.done) {\n\t\t\t\tcallbackfn.call(thisArg, result.value, result.value, this);\n\t\t\t\tresult = iterator.next();\n\t\t\t}\n\t\t}\n\n\t\thas(value: T): boolean {\n\t\t\treturn this._setData.indexOf(value) > -1;\n\t\t}\n\n\t\tkeys(): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn this._setData.length;\n\t\t}\n\n\t\tvalues(): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\t[Symbol.iterator](): IterableIterator<T> {\n\t\t\treturn new ShimIterator(this._setData);\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'Set' = 'Set';\n\t};\n}\n\nexport default Set;\n","import has from '../core/has';\n\nexport interface ObjectAssign {\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source The source object from which to copy properties.\n\t */\n\t<T, U>(target: T, source: U): T & U;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t */\n\t<T, U, V>(target: T, source1: U, source2: V): T & U & V;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t * @param source3 The third source object from which to copy properties.\n\t */\n\t<T, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param sources One or more source objects from which to copy properties\n\t */\n\t(target: object, ...sources: any[]): any;\n}\n\nexport interface ObjectEnteries {\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T extends { [key: string]: any }, K extends keyof T>(o: T): [keyof T, T[K]][];\n\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): [string, any][];\n}\n\nexport interface ObjectGetOwnPropertyDescriptors {\n\t<T>(o: T): { [K in keyof T]: PropertyDescriptor };\n\t(o: any): { [key: string]: PropertyDescriptor };\n}\n\nexport interface ObjectValues {\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T>(o: { [s: string]: T }): T[];\n\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): any[];\n}\n\nexport let assign: ObjectAssign;\n\n/**\n * Gets the own property descriptor of the specified object.\n * An own property descriptor is one that is defined directly on the object and is not\n * inherited from the object's prototype.\n * @param o Object that contains the property.\n * @param p Name of the property.\n */\nexport let getOwnPropertyDescriptor: <T, K extends keyof T>(o: T, propertyKey: K) => PropertyDescriptor | undefined;\n\n/**\n * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\n * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\n * @param o Object that contains the own properties.\n */\nexport let getOwnPropertyNames: (o: any) => string[];\n\n/**\n * Returns an array of all symbol properties found directly on object o.\n * @param o Object to retrieve the symbols from.\n */\nexport let getOwnPropertySymbols: (o: any) => symbol[];\n\n/**\n * Returns true if the values are the same value, false otherwise.\n * @param value1 The first value.\n * @param value2 The second value.\n */\nexport let is: (value1: any, value2: any) => boolean;\n\n/**\n * Returns the names of the enumerable properties and methods of an object.\n * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\nexport let keys: (o: object) => string[];\n\n/* ES7 Object static methods */\n\nexport let getOwnPropertyDescriptors: ObjectGetOwnPropertyDescriptors;\n\nexport let entries: ObjectEnteries;\n\nexport let values: ObjectValues;\n\nif (!has('es6-object')) {\n\tconst keys = Object.keys.bind(Object);\n\tObject.keys = function symbolAwareKeys(o: object): string[] {\n\t\treturn keys(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tObject.assign = function assign(target: any, ...sources: any[]) {\n\t\tif (target == null) {\n\t\t\t// TypeError if undefined or null\n\t\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t\t}\n\n\t\tconst to = Object(target);\n\t\tsources.forEach((nextSource) => {\n\t\t\tif (nextSource) {\n\t\t\t\t// Skip over if undefined or null\n\t\t\t\tkeys(nextSource).forEach((nextKey) => {\n\t\t\t\t\tto[nextKey] = nextSource[nextKey];\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn to;\n\t};\n\n\tconst getOwnPropertyNames = Object.getOwnPropertyNames.bind(Object);\n\tObject.getOwnPropertyNames = function symbolAwareGetOwnPropertyNames(o: any): string[] {\n\t\treturn getOwnPropertyNames(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tObject.getOwnPropertySymbols = function getOwnPropertySymbols(o: any): symbol[] {\n\t\treturn getOwnPropertyNames(o)\n\t\t\t.filter((key) => Boolean(key.match(/^@@.+/)))\n\t\t\t.map((key) => Symbol.for(key.substring(2)));\n\t};\n\n\tObject.is = function is(value1: any, value2: any): boolean {\n\t\tif (value1 === value2) {\n\t\t\treturn value1 !== 0 || 1 / value1 === 1 / value2; // -0\n\t\t}\n\t\treturn value1 !== value1 && value2 !== value2; // NaN\n\t};\n}\n\nif (!has('es2017-object')) {\n\tObject.getOwnPropertyDescriptors = function getOwnPropertyDescriptors<T>(\n\t\to: T\n\t): { [P in keyof T]: TypedPropertyDescriptor<T[P]> } & { [x: string]: PropertyDescriptor } {\n\t\treturn Object.getOwnPropertyNames(o).reduce(\n\t\t\t(previous, key) => {\n\t\t\t\tprevious[key] = Object.getOwnPropertyDescriptor(o, key)!;\n\t\t\t\treturn previous;\n\t\t\t},\n\t\t\t{} as { [P in keyof T]: TypedPropertyDescriptor<T[P]> } & { [x: string]: PropertyDescriptor }\n\t\t);\n\t};\n\n\tObject.entries = function entries(o: any): [string, any][] {\n\t\treturn keys(o).map((key) => [key, o[key]] as [string, any]);\n\t};\n\n\tObject.values = function values(o: any): any[] {\n\t\treturn keys(o).map((key) => o[key]);\n\t};\n}\n\nassign = Object.assign;\ngetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\ngetOwnPropertyNames = Object.getOwnPropertyNames;\ngetOwnPropertySymbols = Object.getOwnPropertySymbols;\nis = Object.is;\nkeys = Object.keys;\ngetOwnPropertyDescriptors = Object.getOwnPropertyDescriptors;\nentries = Object.entries;\nvalues = Object.values;\n\nexport default Object;\n","`!has('es6-iterator')`;\nimport { isArrayLike, Iterable, IterableIterator, ShimIterator } from './iterator';\nimport global from './global';\nimport { is as objectIs } from './object';\nimport has from '../core/has';\n`!has('es6-symbol')`;\nimport './Symbol';\n\nexport interface Map<K, V> {\n\t/**\n\t * Deletes all keys and their associated values.\n\t */\n\tclear(): void;\n\n\t/**\n\t * Deletes a given key and its associated value.\n\t *\n\t * @param key The key to delete\n\t * @return true if the key exists, false if it does not\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Returns an iterator that yields each key/value pair as an array.\n\t *\n\t * @return An iterator for each key/value pair in the instance.\n\t */\n\tentries(): IterableIterator<[K, V]>;\n\n\t/**\n\t * Executes a given function for each map entry. The function\n\t * is invoked with three arguments: the element value, the\n\t * element key, and the associated Map instance.\n\t *\n\t * @param callbackfn The function to execute for each map entry,\n\t * @param thisArg The value to use for `this` for each execution of the calback\n\t */\n\tforEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void;\n\n\t/**\n\t * Returns the value associated with a given key.\n\t *\n\t * @param key The key to look up\n\t * @return The value if one exists or undefined\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Returns an iterator that yields each key in the map.\n\t *\n\t * @return An iterator containing the instance's keys.\n\t */\n\tkeys(): IterableIterator<K>;\n\n\t/**\n\t * Checks for the presence of a given key.\n\t *\n\t * @param key The key to check for\n\t * @return true if the key exists, false if it does not\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Sets the value associated with a given key.\n\t *\n\t * @param key The key to define a value to\n\t * @param value The value to assign\n\t * @return The Map instance\n\t */\n\tset(key: K, value: V): this;\n\n\t/**\n\t * Returns the number of key / value pairs in the Map.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * Returns an iterator that yields each value in the map.\n\t *\n\t * @return An iterator containing the instance's values.\n\t */\n\tvalues(): IterableIterator<V>;\n\n\t/** Returns an iterable of entries in the map. */\n\t[Symbol.iterator](): IterableIterator<[K, V]>;\n\n\treadonly [Symbol.toStringTag]: string;\n}\n\nexport interface MapConstructor {\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t */\n\tnew (): Map<any, any>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator?: [K, V][]): Map<K, V>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator: Iterable<[K, V]>): Map<K, V>;\n\n\treadonly prototype: Map<any, any>;\n\n\treadonly [Symbol.species]: MapConstructor;\n}\n\nexport let Map: MapConstructor = global.Map;\n\nif (!has('es6-map')) {\n\tMap = global.Map = class Map<K, V> {\n\t\tprotected readonly _keys: K[] = [];\n\t\tprotected readonly _values: V[] = [];\n\n\t\t/**\n\t\t * An alternative to Array.prototype.indexOf using Object.is\n\t\t * to check for equality. See http://mzl.la/1zuKO2V\n\t\t */\n\t\tprotected _indexOfKey(keys: K[], key: K): number {\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tif (objectIs(keys[i], key)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\n\t\tstatic [Symbol.species] = Map;\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst value = iterable[i];\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn this._keys.length;\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis._keys.length = this._values.length = 0;\n\t\t}\n\n\t\tdelete(key: K): boolean {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\tif (index < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._keys.splice(index, 1);\n\t\t\tthis._values.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\tentries(): IterableIterator<[K, V]> {\n\t\t\tconst values = this._keys.map(\n\t\t\t\t(key: K, i: number): [K, V] => {\n\t\t\t\t\treturn [key, this._values[i]];\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn new ShimIterator(values);\n\t\t}\n\n\t\tforEach(callback: (value: V, key: K, mapInstance: Map<K, V>) => any, context?: {}) {\n\t\t\tconst keys = this._keys;\n\t\t\tconst values = this._values;\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tcallback.call(context, values[i], keys[i], this);\n\t\t\t}\n\t\t}\n\n\t\tget(key: K): V | undefined {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\treturn index < 0 ? undefined : this._values[index];\n\t\t}\n\n\t\thas(key: K): boolean {\n\t\t\treturn this._indexOfKey(this._keys, key) > -1;\n\t\t}\n\n\t\tkeys(): IterableIterator<K> {\n\t\t\treturn new ShimIterator(this._keys);\n\t\t}\n\n\t\tset(key: K, value: V): Map<K, V> {\n\t\t\tlet index = this._indexOfKey(this._keys, key);\n\t\t\tindex = index < 0 ? this._keys.length : index;\n\t\t\tthis._keys[index] = key;\n\t\t\tthis._values[index] = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tvalues(): IterableIterator<V> {\n\t\t\treturn new ShimIterator(this._values);\n\t\t}\n\n\t\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\t\treturn this.entries();\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'Map' = 'Map';\n\t};\n}\n\nexport default Map;\n","import Promise from '../shim/Promise';\n\n/**\n * Used through the toolkit as a consistent API to manage how callers can \"cleanup\"\n * when doing a function.\n */\nexport interface Handle {\n\t/**\n\t * Perform the destruction/cleanup logic associated with this Handle\n\t */\n\tdestroy(): void;\n}\n\n/**\n * No op function used to replace a Destroyable instance's `destroy` method, once the instance has been destroyed\n */\nfunction noop(): Promise<boolean> {\n\treturn Promise.resolve(false);\n}\n\n/**\n * No op function used to replace a Destroyable instance's `own` method, once the instance has been destroyed\n */\nfunction destroyed(): never {\n\tthrow new Error('Call made to destroyed method');\n}\n\nexport class Destroyable {\n\t/**\n\t * The instance's handles\n\t */\n\tprivate handles: Handle[];\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis.handles = [];\n\t}\n\n\t/**\n\t * Register handles for the instance that will be destroyed when `this.destroy` is called\n\t *\n\t * @param {Handle} handle The handle to add for the instance\n\t * @returns {Handle} A wrapper Handle. When the wrapper Handle's `destroy` method is invoked, the original handle is\n\t *                   removed from the instance, and its `destroy` method is invoked.\n\t */\n\town(handle: Handle): Handle {\n\t\tconst { handles: _handles } = this;\n\t\t_handles.push(handle);\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\t_handles.splice(_handles.indexOf(handle));\n\t\t\t\thandle.destroy();\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Destroys all handlers registered for the instance\n\t *\n\t * @returns {Promise<any} A Promise that resolves once all handles have been destroyed\n\t */\n\tdestroy(): Promise<any> {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.handles.forEach((handle) => {\n\t\t\t\thandle && handle.destroy && handle.destroy();\n\t\t\t});\n\t\t\tthis.destroy = noop;\n\t\t\tthis.own = destroyed;\n\t\t\tresolve(true);\n\t\t});\n\t}\n}\n\nexport default Destroyable;\n","import Map from '../shim/Map';\nimport { Destroyable, Handle } from './Destroyable';\n\n/**\n * Map of computed regular expressions, keyed by string\n */\nconst regexMap = new Map<string, RegExp>();\n\nexport type EventType = string | symbol;\n\n/**\n * The base event object, which provides a `type` property\n */\nexport interface EventObject<T = EventType> {\n\t/**\n\t * The type of the event\n\t */\n\treadonly type: T;\n}\n\n/**\n * Determines if the event type glob has been matched\n *\n * @returns boolean that indicates if the glob is matched\n */\nexport function isGlobMatch(globString: string | symbol, targetString: string | symbol): boolean {\n\tif (typeof targetString === 'string' && typeof globString === 'string' && globString.indexOf('*') !== -1) {\n\t\tlet regex: RegExp;\n\t\tif (regexMap.has(globString)) {\n\t\t\tregex = regexMap.get(globString)!;\n\t\t} else {\n\t\t\tregex = new RegExp(`^${globString.replace(/\\*/g, '.*')}$`);\n\t\t\tregexMap.set(globString, regex);\n\t\t}\n\t\treturn regex.test(targetString);\n\t} else {\n\t\treturn globString === targetString;\n\t}\n}\n\nexport type EventedCallback<T = EventType, E extends EventObject<T> = EventObject<T>> = {\n\t/**\n\t * A callback that takes an `event` argument\n\t *\n\t * @param event The event object\n\t */\n\n\t(event: E): boolean | void;\n};\n\nexport interface CustomEventTypes<T extends EventObject<any> = EventObject<any>> {\n\t[index: string]: T;\n}\n\n/**\n * A type which is either a targeted event listener or an array of listeners\n * @template T The type of target for the events\n * @template E The event type for the events\n */\nexport type EventedCallbackOrArray<T = EventType, E extends EventObject<T> = EventObject<T>> =\n\t| EventedCallback<T, E>\n\t| EventedCallback<T, E>[];\n\n/**\n * Event Class\n */\nexport class Evented<\n\tM extends CustomEventTypes = {},\n\tT = EventType,\n\tO extends EventObject<T> = EventObject<T>\n> extends Destroyable {\n\t// The following member is purely so TypeScript remembers the type of `M` when extending so\n\t// that the utilities in `on.ts` will work https://github.com/Microsoft/TypeScript/issues/20348\n\t// tslint:disable-next-line\n\tprotected __typeMap__?: M;\n\t/**\n\t * map of listeners keyed by event type\n\t */\n\tprotected listenersMap: Map<T | keyof M, EventedCallback<T, O>[]> = new Map();\n\n\t/**\n\t * Emits the event object for the specified type\n\t *\n\t * @param event the event to emit\n\t */\n\temit<K extends keyof M>(event: M[K]): void;\n\temit(event: O): void;\n\temit(event: any): void {\n\t\tthis.listenersMap.forEach((methods, type) => {\n\t\t\tif (isGlobMatch(type as any, event.type)) {\n\t\t\t\t[...methods].forEach((method) => {\n\t\t\t\t\tmethod.call(this, event);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Catch all handler for various call signatures. The signatures are defined in\n\t * `BaseEventedEvents`.  You can add your own event type -> handler types by extending\n\t * `BaseEventedEvents`.  See example for details.\n\t *\n\t * @param args\n\t *\n\t * @example\n\t *\n\t * interface WidgetBaseEvents extends BaseEventedEvents {\n\t *     (type: 'properties:changed', handler: PropertiesChangedHandler): Handle;\n\t * }\n\t * class WidgetBase extends Evented {\n\t *    on: WidgetBaseEvents;\n\t * }\n\t *\n\t * @return {any}\n\t */\n\ton<K extends keyof M>(type: K, listener: EventedCallbackOrArray<K, M[K]>): Handle;\n\ton(type: T, listener: EventedCallbackOrArray<T, O>): Handle;\n\ton(type: any, listener: EventedCallbackOrArray<any, any>): Handle {\n\t\tif (Array.isArray(listener)) {\n\t\t\tconst handles = listener.map((listener) => this._addListener(type, listener));\n\t\t\treturn {\n\t\t\t\tdestroy() {\n\t\t\t\t\thandles.forEach((handle) => handle.destroy());\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\treturn this._addListener(type, listener);\n\t}\n\n\tprivate _addListener(type: T | keyof M, listener: EventedCallback<T, O>) {\n\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\tlisteners.push(listener);\n\t\tthis.listenersMap.set(type, listeners);\n\t\treturn {\n\t\t\tdestroy: () => {\n\t\t\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\t\t\tlisteners.splice(listeners.indexOf(listener), 1);\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport default Evented;\n","import Promise from '../shim/Promise';\nimport Map from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport {\n\tConstructor,\n\tInjectorFactory,\n\tInjectorItem,\n\tRegistryLabel,\n\tWidgetBaseConstructor,\n\tWidgetBaseInterface,\n\tESMDefaultWidgetBase,\n\tWidgetBaseConstructorFunction,\n\tESMDefaultWidgetBaseFunction,\n\tCallback,\n\tWNodeFactory,\n\tRenderResult,\n\tWidgetBaseTypes\n} from './interfaces';\n\nexport type RegistryItem =\n\t| WidgetBaseConstructor\n\t| WNodeFactory<any>\n\t| Promise<WidgetBaseConstructor | WNodeFactory<any>>\n\t| WidgetBaseConstructorFunction\n\t| ESMDefaultWidgetBaseFunction;\n\n/**\n * Widget base type\n */\nexport const WIDGET_BASE_TYPE = '__widget_base_type';\n\nexport interface RegistryEventObject extends EventObject<RegistryLabel> {\n\taction: string;\n\titem: WNodeFactory<any> | WidgetBaseConstructor | InjectorItem;\n}\n/**\n * Widget Registry Interface\n */\nexport interface RegistryInterface {\n\t/**\n\t * Define a WidgetRegistryItem against a label\n\t *\n\t * @param label The label of the widget to register\n\t * @param registryItem The registry item to define\n\t */\n\tdefine(label: RegistryLabel, registryItem: RegistryItem): void;\n\n\t/**\n\t * Return a RegistryItem for the given label, null if an entry doesn't exist\n\t *\n\t * @param widgetLabel The label of the widget to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tget(label: RegistryLabel): WNodeFactory<any> | Callback<any, any, RenderResult> | Constructor<any> | null;\n\tget<T extends WNodeFactory<any>>(label: RegistryLabel): T | null;\n\tget<T extends Callback<any, any, RenderResult>>(label: RegistryLabel): T | null;\n\tget<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null;\n\n\t/**\n\t * Returns a boolean if an entry for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a widget registry item exists\n\t */\n\thas(label: RegistryLabel): boolean;\n\n\t/**\n\t * Define an Injector against a label\n\t *\n\t * @param label The label of the injector to register\n\t * @param registryItem The injector factory\n\t */\n\tdefineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void;\n\n\t/**\n\t * Return an Injector registry item for the given label, null if an entry doesn't exist\n\t *\n\t * @param label The label of the injector to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tgetInjector<T>(label: RegistryLabel): InjectorItem<T> | null;\n\n\t/**\n\t * Returns a boolean if an injector for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a injector registry item exists\n\t */\n\thasInjector(label: RegistryLabel): boolean;\n}\n\n/**\n * Checks is the item is a subclass of WidgetBase (or a WidgetBase)\n *\n * @param item the item to check\n * @returns true/false indicating if the item is a WidgetBaseConstructor\n */\nexport function isWidgetBaseConstructor<T extends WidgetBaseInterface = any>(item: any): item is Constructor<T> {\n\treturn Boolean(item && item._type === WIDGET_BASE_TYPE);\n}\n\nexport function isWidgetFunction(item: any): item is Callback<any, any, RenderResult> {\n\treturn Boolean(item && item.isWidget);\n}\n\nexport function isWNodeFactory<W extends WidgetBaseTypes>(node: any): node is WNodeFactory<W> {\n\tif (typeof node === 'function' && node.isFactory) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport function isWidget<T extends WidgetBaseInterface = any>(\n\titem: any\n): item is Constructor<T> | Callback<any, any, RenderResult> {\n\treturn isWidgetBaseConstructor(item) || isWidgetFunction(item);\n}\n\nexport function isWidgetConstructorDefaultExport<T extends WidgetBaseTypes>(\n\titem: any\n): item is ESMDefaultWidgetBase<T> {\n\treturn Boolean(\n\t\titem &&\n\t\t\titem.hasOwnProperty('__esModule') &&\n\t\t\titem.hasOwnProperty('default') &&\n\t\t\t(isWidget(item.default) || isWNodeFactory(item.default))\n\t);\n}\n\n/**\n * The Registry implementation\n */\nexport class Registry extends Evented<{}, RegistryLabel, RegistryEventObject> implements RegistryInterface {\n\t/**\n\t * internal map of labels and RegistryItem\n\t */\n\tprivate _widgetRegistry: Map<RegistryLabel, RegistryItem> | undefined;\n\n\tprivate _injectorRegistry: Map<RegistryLabel, InjectorItem> | undefined;\n\n\t/**\n\t * Emit loaded event for registry label\n\t */\n\tprivate emitLoadedEvent(\n\t\twidgetLabel: RegistryLabel,\n\t\titem: WNodeFactory<any> | WidgetBaseConstructor | InjectorItem\n\t): void {\n\t\tthis.emit({\n\t\t\ttype: widgetLabel,\n\t\t\taction: 'loaded',\n\t\t\titem\n\t\t});\n\t}\n\n\tpublic define(label: RegistryLabel, item: RegistryItem): void {\n\t\tif (this._widgetRegistry === undefined) {\n\t\t\tthis._widgetRegistry = new Map();\n\t\t}\n\n\t\tif (this._widgetRegistry.has(label)) {\n\t\t\tthrow new Error(`widget has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tthis._widgetRegistry.set(label, item);\n\n\t\tif (item instanceof Promise) {\n\t\t\titem.then(\n\t\t\t\t(widgetCtor) => {\n\t\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\t\treturn widgetCtor;\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t);\n\t\t} else if (isWidgetBaseConstructor(item)) {\n\t\t\tthis.emitLoadedEvent(label, item);\n\t\t}\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void {\n\t\tif (this._injectorRegistry === undefined) {\n\t\t\tthis._injectorRegistry = new Map();\n\t\t}\n\n\t\tif (this._injectorRegistry.has(label)) {\n\t\t\tthrow new Error(`injector has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tconst invalidator = new Evented();\n\n\t\tconst injectorItem: InjectorItem = {\n\t\t\tinjector: injectorFactory(() => invalidator.emit({ type: 'invalidate' })),\n\t\t\tinvalidator\n\t\t};\n\n\t\tthis._injectorRegistry.set(label, injectorItem);\n\t\tthis.emitLoadedEvent(label, injectorItem);\n\t}\n\n\tpublic get(label: RegistryLabel): WNodeFactory<any> | Callback<any, any, RenderResult> | Constructor<any> | null;\n\tpublic get<T extends WNodeFactory<any>>(label: RegistryLabel): T | null;\n\tpublic get<T extends Callback<any, any, RenderResult>>(label: RegistryLabel): T | null;\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null;\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(\n\t\tlabel: RegistryLabel\n\t): WNodeFactory<T> | Callback<any, any, RenderResult> | Constructor<T> | null {\n\t\tif (!this._widgetRegistry || !this.has(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst item = this._widgetRegistry.get(label);\n\n\t\tif (isWidget<T>(item) || isWNodeFactory(item)) {\n\t\t\treturn item;\n\t\t}\n\n\t\tif (item instanceof Promise) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst promise = (<WidgetBaseConstructorFunction>item)();\n\t\tthis._widgetRegistry.set(label, promise);\n\n\t\tpromise.then(\n\t\t\t(widgetCtor) => {\n\t\t\t\tif (isWidgetConstructorDefaultExport<T>(widgetCtor)) {\n\t\t\t\t\twidgetCtor = widgetCtor.default;\n\t\t\t\t}\n\n\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\treturn widgetCtor;\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t);\n\n\t\treturn null;\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel): InjectorItem<T> | null {\n\t\tif (!this._injectorRegistry || !this.hasInjector(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._injectorRegistry.get(label)!;\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._widgetRegistry && this._widgetRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._injectorRegistry && this._injectorRegistry.has(label));\n\t}\n}\n\nexport default Registry;\n","import { PropertyChangeRecord } from './interfaces';\nimport { WIDGET_BASE_TYPE } from './Registry';\n\nfunction isObjectOrArray(value: any): boolean {\n\treturn Object.prototype.toString.call(value) === '[object Object]' || Array.isArray(value);\n}\n\nexport function always(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: true,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function ignore(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: false,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function reference(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: previousProperty !== newProperty,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function shallow(previousProperty: any, newProperty: any, depth = 0): PropertyChangeRecord {\n\tlet changed = false;\n\n\tconst validOldProperty = previousProperty && isObjectOrArray(previousProperty);\n\tconst validNewProperty = newProperty && isObjectOrArray(newProperty);\n\n\tif (!validOldProperty || !validNewProperty) {\n\t\treturn {\n\t\t\tchanged: true,\n\t\t\tvalue: newProperty\n\t\t};\n\t}\n\n\tconst previousKeys = Object.keys(previousProperty);\n\tconst newKeys = Object.keys(newProperty);\n\n\tif (previousKeys.length !== newKeys.length) {\n\t\tchanged = true;\n\t} else {\n\t\tchanged = newKeys.some((key) => {\n\t\t\tif (depth > 0) {\n\t\t\t\treturn shallow(newProperty[key], previousProperty[key], depth - 1).changed;\n\t\t\t}\n\t\t\treturn newProperty[key] !== previousProperty[key];\n\t\t});\n\t}\n\treturn {\n\t\tchanged,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function auto(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\tlet result;\n\tif (typeof newProperty === 'function') {\n\t\tif (newProperty._type === WIDGET_BASE_TYPE) {\n\t\t\tresult = reference(previousProperty, newProperty);\n\t\t} else {\n\t\t\tresult = ignore(previousProperty, newProperty);\n\t\t}\n\t} else if (isObjectOrArray(newProperty)) {\n\t\tresult = shallow(previousProperty, newProperty);\n\t} else {\n\t\tresult = reference(previousProperty, newProperty);\n\t}\n\treturn result;\n}\n","import { Map } from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport { Constructor, InjectorFactory, InjectorItem, RegistryLabel, WidgetBaseInterface } from './interfaces';\nimport { Registry, RegistryEventObject, RegistryItem } from './Registry';\n\nexport type RegistryHandlerEventMap = {\n\tinvalidate: EventObject<'invalidate'>;\n};\n\nexport class RegistryHandler extends Evented<RegistryHandlerEventMap> {\n\tprivate _registry = new Registry();\n\tprivate _registryWidgetLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprivate _registryInjectorLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprotected baseRegistry!: Registry;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.own(this._registry);\n\t\tconst destroy = () => {\n\t\t\tif (this.baseRegistry) {\n\t\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis.baseRegistry = undefined as any;\n\t\t\t}\n\t\t};\n\t\tthis.own({ destroy });\n\t}\n\n\tpublic set base(baseRegistry: Registry) {\n\t\tif (this.baseRegistry) {\n\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t}\n\t\tthis.baseRegistry = baseRegistry;\n\t}\n\n\tpublic get base(): Registry {\n\t\treturn this.baseRegistry;\n\t}\n\n\tpublic define(label: RegistryLabel, widget: RegistryItem): void {\n\t\tthis._registry.define(label, widget);\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injector: InjectorFactory): void {\n\t\tthis._registry.defineInjector(label, injector);\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn this._registry.has(label) || Boolean(this.baseRegistry && this.baseRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn this._registry.hasInjector(label) || Boolean(this.baseRegistry && this.baseRegistry.hasInjector(label));\n\t}\n\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean = false\n\t): Constructor<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'get', this._registryWidgetLabelMap);\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel, globalPrecedence: boolean = false): InjectorItem<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'getInjector', this._registryInjectorLabelMap);\n\t}\n\n\tprivate _get(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean,\n\t\tgetFunctionName: 'getInjector' | 'get',\n\t\tlabelMap: Map<Registry, RegistryLabel[]>\n\t): any {\n\t\tconst registries = globalPrecedence ? [this.baseRegistry, this._registry] : [this._registry, this.baseRegistry];\n\t\tfor (let i = 0; i < registries.length; i++) {\n\t\t\tconst registry: any = registries[i];\n\t\t\tif (!registry) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst item = registry[getFunctionName](label);\n\t\t\tconst registeredLabels = labelMap.get(registry) || [];\n\t\t\tif (item) {\n\t\t\t\treturn item;\n\t\t\t} else if (registeredLabels.indexOf(label) === -1) {\n\t\t\t\tconst handle = registry.on(label, (event: RegistryEventObject) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.action === 'loaded' &&\n\t\t\t\t\t\t(this as any)[getFunctionName](label, globalPrecedence) === event.item\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.emit({ type: 'invalidate' });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.own(handle);\n\t\t\t\tlabelMap.set(registry, [...registeredLabels, label]);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport default RegistryHandler;\n","import global from '../shim/global';\nimport has from '../core/has';\nimport WeakMap from '../shim/WeakMap';\nimport Set from '../shim/Set';\nimport Map from '../shim/Map';\nimport {\n\tWNode,\n\tVNode,\n\tDNode,\n\tVNodeProperties,\n\tTransitionStrategy,\n\tSupportedClassName,\n\tDomVNode,\n\tLazyDefine,\n\tConstructor,\n\tRenderResult,\n\tWidgetBaseInterface,\n\tCallback,\n\tMiddlewareMap,\n\tWNodeFactory,\n\tUnionToIntersection,\n\tWidgetProperties,\n\tMiddlewareResultFactory,\n\tWidgetBaseTypes,\n\tRegistryLabel,\n\tDeferredVirtualProperties,\n\tDomOptions\n} from './interfaces';\nimport { Registry, isWidget, isWidgetBaseConstructor, isWidgetFunction, isWNodeFactory } from './Registry';\nimport { auto } from './diff';\nimport RegistryHandler from './RegistryHandler';\nimport { NodeHandler } from './NodeHandler';\n\ndeclare global {\n\tnamespace JSX {\n\t\ttype Element = WNode;\n\t\tinterface ElementAttributesProperty {\n\t\t\tproperties: {};\n\t\t}\n\t\tinterface IntrinsicElements {\n\t\t\t[key: string]: VNodeProperties;\n\t\t}\n\t}\n}\n\nexport interface BaseNodeWrapper {\n\tid: string;\n\towningId: string;\n\tnode: WNode<any> | VNode;\n\tdomNode?: Node;\n\tdepth: number;\n\torder: number;\n\trequiresInsertBefore?: boolean;\n\thasPreviousSiblings?: boolean;\n\thasParentWNode?: boolean;\n\tnamespace?: string;\n\thasAnimations?: boolean;\n\tparentId: string;\n\tchildDomWrapperId?: string;\n}\n\nexport interface WNodeWrapper extends BaseNodeWrapper {\n\tnode: WNode<any>;\n\tinstance?: any;\n\tmergeNodes?: Node[];\n\tnodeHandlerCalled?: boolean;\n\tregistryItem?: Callback<any, any, RenderResult> | Constructor<any> | null;\n\tproperties: any;\n}\n\nexport interface WidgetMeta {\n\tmountNode: HTMLElement;\n\tdirty: boolean;\n\tinvalidator: () => void;\n\tmiddleware?: any;\n\tmiddlewareIds: string[];\n\tregistryHandler?: RegistryHandler;\n\tregistry: Registry;\n\tproperties: any;\n\tchildren?: DNode[];\n\trendering: boolean;\n\tnodeMap?: Map<string | number, HTMLElement>;\n\tdestroyMap?: Map<string, () => void>;\n\tdeferRefs: number;\n\tcustomDiffProperties?: Set<string>;\n\tcustomDiffMap?: Map<string, Map<string, (current: any, next: any) => void>>;\n}\n\nexport interface WidgetData {\n\tonDetach: () => void;\n\tonAttach: () => void;\n\tdirty: boolean;\n\tnodeHandler: NodeHandler;\n\tinvalidate?: Function;\n\trendering: boolean;\n\tinputProperties: any;\n\tregistry: RegistryHandler;\n}\n\nexport interface VNodeWrapper extends BaseNodeWrapper {\n\tnode: VNode | DomVNode;\n\tmerged?: boolean;\n\tinserted?: boolean;\n\tdeferredProperties?: VNodeProperties;\n}\n\nexport type DNodeWrapper = VNodeWrapper | WNodeWrapper;\n\nexport interface MountOptions {\n\tsync: boolean;\n\tmerge: boolean;\n\ttransition?: TransitionStrategy;\n\tdomNode: HTMLElement;\n\tregistry: Registry;\n}\n\nexport interface Renderer {\n\tinvalidate(): void;\n\tmount(mountOptions?: Partial<MountOptions>): void;\n}\n\ninterface ProcessItem {\n\tcurrent?: (WNodeWrapper | VNodeWrapper)[];\n\tnext?: (WNodeWrapper | VNodeWrapper)[];\n\tmeta: ProcessMeta;\n}\n\ninterface ProcessResult {\n\titem?: ProcessItem;\n\twidget?: AttachApplication | DetachApplication;\n\tdom?: ApplicationInstruction;\n}\n\ninterface ProcessMeta {\n\tmergeNodes?: Node[];\n\toldIndex?: number;\n\tnewIndex?: number;\n}\n\ninterface InvalidationQueueItem {\n\tid: string;\n\tdepth: number;\n\torder: number;\n}\n\ninterface Instruction {\n\tcurrent: undefined | DNodeWrapper;\n\tnext: undefined | DNodeWrapper;\n}\n\ninterface CreateWidgetInstruction {\n\tnext: WNodeWrapper;\n}\n\ninterface UpdateWidgetInstruction {\n\tcurrent: WNodeWrapper;\n\tnext: WNodeWrapper;\n}\n\ninterface RemoveWidgetInstruction {\n\tcurrent: WNodeWrapper;\n}\n\ninterface CreateDomInstruction {\n\tnext: VNodeWrapper;\n}\n\ninterface UpdateDomInstruction {\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface RemoveDomInstruction {\n\tcurrent: VNodeWrapper;\n}\n\ninterface AttachApplication {\n\ttype: 'attach';\n\tid: string;\n\tinstance?: WidgetBaseInterface;\n\tattached?: boolean;\n}\n\ninterface DetachApplication {\n\ttype: 'detach';\n\tcurrent: WNodeWrapper;\n\tinstance?: WidgetBaseInterface;\n}\n\ninterface CreateDomApplication {\n\ttype: 'create';\n\tcurrent?: VNodeWrapper;\n\tnext: VNodeWrapper;\n\tparentDomNode: Node;\n}\n\ninterface DeleteDomApplication {\n\ttype: 'delete';\n\tcurrent: VNodeWrapper;\n}\n\ninterface UpdateDomApplication {\n\ttype: 'update';\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface PreviousProperties {\n\tproperties: any;\n\tattributes?: any;\n\tevents?: any;\n}\n\ntype ApplicationInstruction =\n\t| CreateDomApplication\n\t| UpdateDomApplication\n\t| DeleteDomApplication\n\t| Required<AttachApplication>\n\t| DetachApplication;\n\nconst EMPTY_ARRAY: DNodeWrapper[] = [];\nconst nodeOperations = ['focus', 'blur', 'scrollIntoView', 'click'];\nconst NAMESPACE_W3 = 'http://www.w3.org/';\nconst NAMESPACE_SVG = NAMESPACE_W3 + '2000/svg';\nconst NAMESPACE_XLINK = NAMESPACE_W3 + '1999/xlink';\nconst WNODE = '__WNODE_TYPE';\nconst VNODE = '__VNODE_TYPE';\nconst DOMVNODE = '__DOMVNODE_TYPE';\n\nexport function isTextNode(item: any): item is Text {\n\treturn item && item.nodeType === 3;\n}\n\nfunction isLazyDefine(item: any): item is LazyDefine<any> {\n\treturn Boolean(item && item.label);\n}\n\nfunction isWNodeWrapper(child: DNodeWrapper): child is WNodeWrapper {\n\treturn child && isWNode(child.node);\n}\n\nfunction isVNodeWrapper(child?: DNodeWrapper | null): child is VNodeWrapper {\n\treturn !!child && isVNode(child.node);\n}\n\nfunction isVirtualWrapper(child?: DNodeWrapper | null): boolean {\n\treturn isVNodeWrapper(child) && child.node.tag === 'virtual';\n}\n\nfunction isBodyWrapper(wrapper?: DNodeWrapper): boolean {\n\treturn isVNodeWrapper(wrapper) && wrapper.node.tag === 'body';\n}\n\nfunction isAttachApplication(value: any): value is AttachApplication | DetachApplication {\n\treturn !!value.type;\n}\n\nexport function isWNode<W extends WidgetBaseTypes = any>(child: any): child is WNode<W> {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === WNODE);\n}\n\nexport function isVNode(child: DNode): child is VNode {\n\treturn Boolean(\n\t\tchild && child !== true && typeof child !== 'string' && (child.type === VNODE || child.type === DOMVNODE)\n\t);\n}\n\nexport function isDomVNode(child: DNode): child is DomVNode {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === DOMVNODE);\n}\n\nexport function isElementNode(value: any): value is Element {\n\treturn !!value.tagName;\n}\n\nfunction toTextVNode(data: any): VNode {\n\treturn {\n\t\ttag: '',\n\t\tproperties: {},\n\t\tchildren: undefined,\n\t\ttext: `${data}`,\n\t\ttype: VNODE\n\t};\n}\n\nfunction updateAttributes(\n\tdomNode: Element,\n\tpreviousAttributes: { [index: string]: string | undefined },\n\tattributes: { [index: string]: string | undefined },\n\tnamespace?: string\n) {\n\tconst attrNames = Object.keys(attributes);\n\tconst attrCount = attrNames.length;\n\tfor (let i = 0; i < attrCount; i++) {\n\t\tconst attrName = attrNames[i];\n\t\tconst attrValue = attributes[attrName];\n\t\tconst previousAttrValue = previousAttributes[attrName];\n\t\tif (attrValue !== previousAttrValue) {\n\t\t\tupdateAttribute(domNode, attrName, attrValue, namespace);\n\t\t}\n\t}\n}\n\n/**\n * Wrapper function for calls to create a widget.\n */\nexport function w<W extends WidgetBaseTypes>(\n\tnode: WNode<W>,\n\tproperties: Partial<W['properties']>,\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends WidgetBaseTypes>(\n\twidgetConstructor: Constructor<W> | RegistryLabel | WNodeFactory<W> | LazyDefine<W>,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends WidgetBaseTypes>(\n\twidgetConstructorOrNode:\n\t\t| Constructor<W>\n\t\t| RegistryLabel\n\t\t| WNodeFactory<W>\n\t\t| WNode<W>\n\t\t| LazyDefine<W>\n\t\t| Callback<any, any, RenderResult>,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W> {\n\tif (isWNodeFactory<W>(widgetConstructorOrNode)) {\n\t\treturn widgetConstructorOrNode(properties, children);\n\t}\n\n\tif (isWNode<W>(widgetConstructorOrNode)) {\n\t\tproperties = { ...(widgetConstructorOrNode.properties as any), ...(properties as any) };\n\t\tchildren = children ? children : widgetConstructorOrNode.children;\n\t\twidgetConstructorOrNode = widgetConstructorOrNode.widgetConstructor;\n\t}\n\n\treturn {\n\t\tchildren: children || [],\n\t\twidgetConstructor: widgetConstructorOrNode,\n\t\tproperties,\n\t\ttype: WNODE\n\t};\n}\n\n/**\n * Wrapper function for calls to create VNodes.\n */\nexport function v(node: VNode, properties: VNodeProperties, children: undefined | DNode[]): VNode;\nexport function v(node: VNode, properties: VNodeProperties): VNode;\nexport function v(tag: string, children: undefined | DNode[]): VNode;\nexport function v<K extends keyof HTMLElementTagNameMap>(\n\ttag: K,\n\tproperties: DeferredVirtualProperties | VNodeProperties<HTMLElementTagNameMap[K]>,\n\tchildren?: DNode[]\n): VNode;\nexport function v(tag: string, properties: DeferredVirtualProperties | VNodeProperties, children?: DNode[]): VNode;\nexport function v(tag: string): VNode;\nexport function v(\n\ttag: string | VNode,\n\tpropertiesOrChildren: VNodeProperties | DeferredVirtualProperties | DNode[] = {},\n\tchildren: undefined | DNode[] = undefined\n): VNode {\n\tlet properties: VNodeProperties | DeferredVirtualProperties = propertiesOrChildren;\n\tlet deferredPropertiesCallback;\n\n\tif (Array.isArray(propertiesOrChildren)) {\n\t\tchildren = propertiesOrChildren;\n\t\tproperties = {};\n\t}\n\n\tif (typeof properties === 'function') {\n\t\tdeferredPropertiesCallback = properties;\n\t\tproperties = {};\n\t}\n\n\tif (isVNode(tag)) {\n\t\tlet { classes = [], styles = {}, ...newProperties } = properties;\n\t\tlet { classes: nodeClasses = [], styles: nodeStyles = {}, ...nodeProperties } = tag.properties;\n\t\tnodeClasses = Array.isArray(nodeClasses) ? nodeClasses : [nodeClasses];\n\t\tclasses = Array.isArray(classes) ? classes : [classes];\n\t\tstyles = { ...nodeStyles, ...styles };\n\t\tproperties = { ...nodeProperties, ...newProperties, classes: [...nodeClasses, ...classes], styles };\n\t\tchildren = children ? children : tag.children;\n\t\ttag = tag.tag;\n\t}\n\n\treturn {\n\t\ttag,\n\t\tdeferredPropertiesCallback,\n\t\tchildren,\n\t\tproperties,\n\t\ttype: VNODE\n\t};\n}\n\n/**\n * Create a VNode for an existing DOM Node.\n */\nexport function dom(\n\t{ node, attrs = {}, props = {}, on = {}, diffType = 'none', onAttach }: DomOptions,\n\tchildren?: DNode[]\n): DomVNode {\n\treturn {\n\t\ttag: isElementNode(node) ? node.tagName.toLowerCase() : '',\n\t\tproperties: props,\n\t\tattributes: attrs,\n\t\tevents: on,\n\t\tchildren,\n\t\ttype: DOMVNODE,\n\t\tdomNode: node,\n\t\ttext: isElementNode(node) ? undefined : node.data,\n\t\tdiffType,\n\t\tonAttach\n\t};\n}\n\nexport const REGISTRY_ITEM = '__registry_item';\n\nexport class FromRegistry<P> {\n\tstatic type = REGISTRY_ITEM;\n\tproperties: P = {} as P;\n\tname: string | undefined;\n}\n\nexport function fromRegistry<P>(tag: string): Constructor<FromRegistry<P>> {\n\treturn class extends FromRegistry<P> {\n\t\tproperties: P = {} as P;\n\t\tstatic type = REGISTRY_ITEM;\n\t\tname = tag;\n\t};\n}\n\nfunction spreadChildren(children: any[], child: any): any[] {\n\tif (Array.isArray(child)) {\n\t\treturn child.reduce(spreadChildren, children);\n\t} else {\n\t\treturn [...children, child];\n\t}\n}\n\nexport function tsx(tag: any, properties = {}, ...children: any[]): DNode {\n\tchildren = children.reduce(spreadChildren, []);\n\tproperties = properties === null ? {} : properties;\n\tif (typeof tag === 'string') {\n\t\treturn v(tag, properties, children);\n\t} else if (tag.type === 'registry' && (properties as any).__autoRegistryItem) {\n\t\tconst name = (properties as any).__autoRegistryItem;\n\t\tdelete (properties as any).__autoRegistryItem;\n\t\treturn w(name, properties, children);\n\t} else if (tag.type === REGISTRY_ITEM) {\n\t\tconst registryItem = new tag();\n\t\treturn w(registryItem.name, properties, children);\n\t} else {\n\t\treturn w(tag, properties, children);\n\t}\n}\n\nexport function propertiesDiff(current: any, next: any, invalidator: () => void, ignoreProperties: string[]) {\n\tconst propertyNames = [...Object.keys(current), ...Object.keys(next)];\n\tfor (let i = 0; i < propertyNames.length; i++) {\n\t\tif (ignoreProperties.indexOf(propertyNames[i]) > -1) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst result = auto(current[propertyNames[i]], next[propertyNames[i]]);\n\t\tif (result.changed) {\n\t\t\tinvalidator();\n\t\t\tbreak;\n\t\t}\n\t\tignoreProperties.push(propertyNames[i]);\n\t}\n}\n\nfunction buildPreviousProperties(domNode: any, current: VNodeWrapper) {\n\tconst {\n\t\tnode: { diffType, properties, attributes }\n\t} = current;\n\tif (!diffType || diffType === 'vdom') {\n\t\treturn {\n\t\t\tproperties: current.deferredProperties\n\t\t\t\t? { ...current.deferredProperties, ...current.node.properties }\n\t\t\t\t: current.node.properties,\n\t\t\tattributes: current.node.attributes,\n\t\t\tevents: current.node.events\n\t\t};\n\t} else if (diffType === 'none') {\n\t\treturn {\n\t\t\tproperties: {},\n\t\t\tattributes: current.node.attributes ? {} : undefined,\n\t\t\tevents: current.node.events\n\t\t};\n\t}\n\tlet newProperties: any = {\n\t\tproperties: {}\n\t};\n\tif (attributes) {\n\t\tnewProperties.attributes = {};\n\t\tnewProperties.events = current.node.events;\n\t\tObject.keys(properties).forEach((propName) => {\n\t\t\tnewProperties.properties[propName] = domNode[propName];\n\t\t});\n\t\tObject.keys(attributes).forEach((attrName) => {\n\t\t\tnewProperties.attributes[attrName] = domNode.getAttribute(attrName);\n\t\t});\n\t\treturn newProperties;\n\t}\n\tnewProperties.properties = Object.keys(properties).reduce(\n\t\t(props, property) => {\n\t\t\tprops[property] = domNode.getAttribute(property) || domNode[property];\n\t\t\treturn props;\n\t\t},\n\t\t{} as any\n\t);\n\treturn newProperties;\n}\n\nfunction checkDistinguishable(wrappers: DNodeWrapper[], index: number, parentWNodeWrapper?: WNodeWrapper) {\n\tconst wrapperToCheck = wrappers[index];\n\tif (isVNodeWrapper(wrapperToCheck) && !wrapperToCheck.node.tag) {\n\t\treturn;\n\t}\n\tconst { key } = wrapperToCheck.node.properties;\n\tlet parentName = 'unknown';\n\tif (parentWNodeWrapper) {\n\t\tconst {\n\t\t\tnode: { widgetConstructor }\n\t\t} = parentWNodeWrapper;\n\t\tparentName = (widgetConstructor as any).name || 'unknown';\n\t}\n\n\tif (key === undefined || key === null) {\n\t\tfor (let i = 0; i < wrappers.length; i++) {\n\t\t\tif (i !== index) {\n\t\t\t\tconst wrapper = wrappers[i];\n\t\t\t\tif (same(wrapper, wrapperToCheck)) {\n\t\t\t\t\tlet nodeIdentifier: string;\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\tnodeIdentifier = (wrapper.node.widgetConstructor as any).name || 'unknown';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnodeIdentifier = wrapper.node.tag;\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`A widget (${parentName}) has had a child added or removed, but they were not able to uniquely identified. It is recommended to provide a unique 'key' property when using the same widget or element (${nodeIdentifier}) multiple times as siblings`\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction same(dnode1: DNodeWrapper, dnode2: DNodeWrapper): boolean {\n\tif (isVNodeWrapper(dnode1) && isVNodeWrapper(dnode2)) {\n\t\tif (isDomVNode(dnode1.node) && isDomVNode(dnode2.node)) {\n\t\t\tif (dnode1.node.domNode !== dnode2.node.domNode) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (dnode1.node.tag !== dnode2.node.tag) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.properties.key !== dnode2.node.properties.key) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t} else if (isWNodeWrapper(dnode1) && isWNodeWrapper(dnode2)) {\n\t\tconst widgetConstructor1 = dnode1.registryItem || dnode1.node.widgetConstructor;\n\t\tconst widgetConstructor2 = dnode2.registryItem || dnode2.node.widgetConstructor;\n\t\tif (dnode1.instance === undefined && typeof widgetConstructor2 === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (widgetConstructor1 !== widgetConstructor2) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.properties.key !== dnode2.node.properties.key) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction findIndexOfChild(children: DNodeWrapper[], sameAs: DNodeWrapper, start: number) {\n\tfor (let i = start; i < children.length; i++) {\n\t\tif (same(children[i], sameAs)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction createClassPropValue(classes: SupportedClassName | SupportedClassName[] = []) {\n\tlet classNames = '';\n\tif (Array.isArray(classes)) {\n\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\tlet className = classes[i];\n\t\t\tif (className && className !== true) {\n\t\t\t\tclassNames = classNames ? `${classNames} ${className}` : className;\n\t\t\t}\n\t\t}\n\t\treturn classNames;\n\t}\n\tif (classes && classes !== true) {\n\t\tclassNames = classes;\n\t}\n\treturn classNames;\n}\n\nfunction updateAttribute(domNode: Element, attrName: string, attrValue: string | undefined, namespace?: string) {\n\tif (namespace === NAMESPACE_SVG && attrName === 'href' && attrValue) {\n\t\tdomNode.setAttributeNS(NAMESPACE_XLINK, attrName, attrValue);\n\t} else if ((attrName === 'role' && attrValue === '') || attrValue === undefined) {\n\t\tdomNode.removeAttribute(attrName);\n\t} else {\n\t\tdomNode.setAttribute(attrName, attrValue);\n\t}\n}\n\nfunction arrayFrom(arr: any) {\n\treturn Array.prototype.slice.call(arr);\n}\n\nfunction createFactory(callback: any, middlewares: any): any {\n\tconst factory = (properties: any, children?: any) => {\n\t\tif (properties) {\n\t\t\tconst result = w(callback, properties, children);\n\t\t\tcallback.isWidget = true;\n\t\t\tcallback.middlewares = middlewares;\n\t\t\treturn result;\n\t\t}\n\t\treturn {\n\t\t\tmiddlewares,\n\t\t\tcallback\n\t\t};\n\t};\n\tfactory.isFactory = true;\n\treturn factory;\n}\n\nexport function create<T extends MiddlewareMap, MiddlewareProps = ReturnType<T[keyof T]>['properties']>(\n\tmiddlewares: T = {} as T\n) {\n\tfunction properties<Props extends {}>() {\n\t\tfunction returns<ReturnValue>(\n\t\t\tcallback: Callback<WidgetProperties & Props & UnionToIntersection<MiddlewareProps>, T, ReturnValue>\n\t\t): ReturnValue extends RenderResult\n\t\t\t? WNodeFactory<{\n\t\t\t\t\tproperties: Props & WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\t\tchildren: DNode[];\n\t\t\t  }>\n\t\t\t: MiddlewareResultFactory<WidgetProperties & Props & UnionToIntersection<MiddlewareProps>, T, ReturnValue> {\n\t\t\treturn createFactory(callback, middlewares);\n\t\t}\n\t\treturn returns;\n\t}\n\n\tfunction returns<ReturnValue>(\n\t\tcallback: Callback<WidgetProperties & UnionToIntersection<MiddlewareProps>, T, ReturnValue>\n\t): ReturnValue extends RenderResult\n\t\t? WNodeFactory<{\n\t\t\t\tproperties: WidgetProperties & UnionToIntersection<MiddlewareProps>;\n\t\t\t\tchildren: DNode[];\n\t\t  }>\n\t\t: MiddlewareResultFactory<WidgetProperties & UnionToIntersection<MiddlewareProps>, T, ReturnValue> {\n\t\treturn createFactory(callback, middlewares);\n\t}\n\treturns.properties = properties;\n\treturn returns;\n}\n\nconst factory = create();\n\nfunction wrapNodes(renderer: () => RenderResult) {\n\tconst result = renderer();\n\tconst isWNodeWrapper = isWNode(result);\n\tconst callback = () => {\n\t\treturn result;\n\t};\n\tcallback.isWNodeWrapper = isWNodeWrapper;\n\treturn factory(callback);\n}\n\nexport const widgetInstanceMap = new WeakMap<WidgetBaseInterface, WidgetData>();\nconst widgetMetaMap = new Map<string, WidgetMeta>();\nconst requestedDomNodes = new Set();\nlet wrapperId = 0;\nlet metaId = 0;\n\nfunction addNodeToMap(id: string, key: string | number, node: HTMLElement) {\n\tconst widgetMeta = widgetMetaMap.get(id);\n\tif (widgetMeta) {\n\t\twidgetMeta.nodeMap = widgetMeta.nodeMap || new Map();\n\t\twidgetMeta.nodeMap.set(key, node);\n\t\tif (requestedDomNodes.has(`${id}-${key}`)) {\n\t\t\twidgetMeta.invalidator();\n\t\t\trequestedDomNodes.delete(`${id}-${key}`);\n\t\t}\n\t}\n}\n\nfunction destroyHandles(meta: WidgetMeta) {\n\tconst { destroyMap, middlewareIds } = meta;\n\tif (!destroyMap) {\n\t\treturn;\n\t}\n\tfor (let i = 0; i < middlewareIds.length; i++) {\n\t\tconst id = middlewareIds[i];\n\t\tconst destroy = destroyMap.get(id);\n\t\tdestroy && destroy();\n\t\tdestroyMap.delete(id);\n\t\tif (destroyMap.size === 0) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tdestroyMap.clear();\n}\n\nfunction runDiffs(meta: WidgetMeta, current: any, next: any) {\n\tmeta.customDiffMap = meta.customDiffMap || new Map();\n\tif (meta.customDiffMap.size) {\n\t\tmeta.customDiffMap.forEach((diffMap) => {\n\t\t\tdiffMap.forEach((diff) => diff({ ...current }, { ...next }));\n\t\t});\n\t}\n}\n\nexport const invalidator = factory(({ id }) => {\n\tconst [widgetId] = id.split('-');\n\treturn () => {\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\treturn widgetMeta.invalidator();\n\t\t}\n\t};\n});\n\nexport const node = factory(({ id }) => {\n\treturn {\n\t\tget(key: string | number): HTMLElement | null {\n\t\t\tconst [widgetId] = id.split('-');\n\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\tif (widgetMeta) {\n\t\t\t\twidgetMeta.nodeMap = widgetMeta.nodeMap || new Map();\n\t\t\t\tconst mountNode = widgetMeta.mountNode;\n\t\t\t\tconst node = widgetMeta.nodeMap.get(key);\n\t\t\t\tif (node && mountNode.contains(node)) {\n\t\t\t\t\treturn node;\n\t\t\t\t}\n\t\t\t\trequestedDomNodes.add(`${widgetId}-${key}`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n});\n\nexport const diffProperty = factory(({ id }) => {\n\treturn (propertyName: string, diff: (current: any, next: any) => void) => {\n\t\tconst [widgetId] = id.split('-');\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\twidgetMeta.customDiffMap = widgetMeta.customDiffMap || new Map();\n\t\t\twidgetMeta.customDiffProperties = widgetMeta.customDiffProperties || new Set();\n\t\t\tconst propertyDiffMap = widgetMeta.customDiffMap.get(id) || new Map();\n\t\t\tif (!propertyDiffMap.has(propertyName)) {\n\t\t\t\tpropertyDiffMap.set(propertyName, diff);\n\t\t\t\twidgetMeta.customDiffProperties.add(propertyName);\n\t\t\t}\n\t\t\twidgetMeta.customDiffMap.set(id, propertyDiffMap);\n\t\t}\n\t};\n});\n\nexport const destroy = factory(({ id }) => {\n\treturn (destroyFunction: () => void): void => {\n\t\tconst [widgetId] = id.split('-');\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\twidgetMeta.destroyMap = widgetMeta.destroyMap || new Map();\n\t\t\tif (!widgetMeta.destroyMap.has(id)) {\n\t\t\t\twidgetMeta.destroyMap.set(id, destroyFunction);\n\t\t\t}\n\t\t}\n\t};\n});\n\nexport const getRegistry = factory(({ id }) => {\n\tconst [widgetId] = id.split('-');\n\treturn (): RegistryHandler | null => {\n\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\tif (widgetMeta) {\n\t\t\tif (!widgetMeta.registryHandler) {\n\t\t\t\twidgetMeta.registryHandler = new RegistryHandler();\n\t\t\t\twidgetMeta.registryHandler.base = widgetMeta.registry;\n\t\t\t\twidgetMeta.registryHandler.on('invalidate', widgetMeta.invalidator);\n\t\t\t}\n\t\t\twidgetMeta.registryHandler = widgetMeta.registryHandler || new RegistryHandler();\n\t\t\treturn widgetMeta.registryHandler;\n\t\t}\n\t\treturn null;\n\t};\n});\n\nexport const defer = factory(({ id }) => {\n\tconst [widgetId] = id.split('-');\n\tlet isDeferred = false;\n\treturn {\n\t\tpause() {\n\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\tif (!isDeferred && widgetMeta) {\n\t\t\t\twidgetMeta.deferRefs = widgetMeta.deferRefs + 1;\n\t\t\t\tisDeferred = true;\n\t\t\t}\n\t\t},\n\t\tresume() {\n\t\t\tconst widgetMeta = widgetMetaMap.get(widgetId);\n\t\t\tif (isDeferred && widgetMeta) {\n\t\t\t\twidgetMeta.deferRefs = widgetMeta.deferRefs - 1;\n\t\t\t\tisDeferred = false;\n\t\t\t}\n\t\t}\n\t};\n});\n\nexport function renderer(renderer: () => RenderResult): Renderer {\n\tlet _mountOptions: MountOptions = {\n\t\tsync: false,\n\t\tmerge: true,\n\t\ttransition: undefined,\n\t\tdomNode: global.document.body,\n\t\tregistry: new Registry()\n\t};\n\tlet _invalidationQueue: InvalidationQueueItem[] = [];\n\tlet _processQueue: (ProcessItem | DetachApplication | AttachApplication)[] = [];\n\tlet _deferredProcessQueue: (ProcessItem | DetachApplication | AttachApplication)[] = [];\n\tlet _applicationQueue: ApplicationInstruction[] = [];\n\tlet _eventMap = new WeakMap<Function, EventListener>();\n\tlet _idToWrapperMap = new Map<string, DNodeWrapper>();\n\tlet _wrapperSiblingMap = new WeakMap<DNodeWrapper, DNodeWrapper>();\n\tlet _idToChildrenWrappers = new Map<string, DNodeWrapper[]>();\n\tlet _insertBeforeMap: undefined | WeakMap<DNodeWrapper, Node> = new WeakMap<DNodeWrapper, Node>();\n\tlet _nodeToWrapperMap = new WeakMap<VNode | WNode<any>, WNodeWrapper>();\n\tlet _renderScheduled: number | undefined;\n\tlet _idleCallbacks: Function[] = [];\n\tlet _deferredRenderCallbacks: Function[] = [];\n\tlet parentInvalidate: () => void;\n\tlet _allMergedNodes: Node[] = [];\n\n\tfunction nodeOperation(\n\t\tpropName: string,\n\t\tpropValue: (() => boolean) | boolean,\n\t\tpreviousValue: boolean,\n\t\tdomNode: HTMLElement & { [index: string]: any }\n\t): void {\n\t\tlet result = propValue && !previousValue;\n\t\tif (typeof propValue === 'function') {\n\t\t\tresult = propValue();\n\t\t}\n\t\tif (result === true) {\n\t\t\t_deferredRenderCallbacks.push(() => {\n\t\t\t\tdomNode[propName]();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction updateEvent(\n\t\tdomNode: Node,\n\t\teventName: string,\n\t\tcurrentValue: (event: Event) => void,\n\t\tpreviousValue?: Function\n\t) {\n\t\tif (previousValue) {\n\t\t\tconst previousEvent = _eventMap.get(previousValue);\n\t\t\tpreviousEvent && domNode.removeEventListener(eventName, previousEvent);\n\t\t}\n\n\t\tlet callback = currentValue;\n\n\t\tif (eventName === 'input') {\n\t\t\tcallback = function(this: any, evt: Event) {\n\t\t\t\tcurrentValue.call(this, evt);\n\t\t\t\t(evt.target as any)['oninput-value'] = (evt.target as HTMLInputElement).value;\n\t\t\t};\n\t\t}\n\n\t\tdomNode.addEventListener(eventName, callback);\n\t\t_eventMap.set(currentValue, callback);\n\t}\n\n\tfunction removeOrphanedEvents(\n\t\tdomNode: Element,\n\t\tpreviousProperties: VNodeProperties,\n\t\tproperties: VNodeProperties,\n\t\tonlyEvents: boolean = false\n\t) {\n\t\tObject.keys(previousProperties).forEach((propName) => {\n\t\t\tconst isEvent = propName.substr(0, 2) === 'on' || onlyEvents;\n\t\t\tconst eventName = onlyEvents ? propName : propName.substr(2);\n\t\t\tif (isEvent && !properties[propName]) {\n\t\t\t\tconst eventCallback = _eventMap.get(previousProperties[propName]);\n\t\t\t\tif (eventCallback) {\n\t\t\t\t\tdomNode.removeEventListener(eventName, eventCallback);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction resolveRegistryItem(wrapper: WNodeWrapper, instance?: any, id?: string) {\n\t\tif (!isWidget(wrapper.node.widgetConstructor)) {\n\t\t\tconst owningNode = _nodeToWrapperMap.get(wrapper.node);\n\t\t\tif (owningNode) {\n\t\t\t\tif (owningNode.instance) {\n\t\t\t\t\tinstance = owningNode.instance;\n\t\t\t\t} else {\n\t\t\t\t\tid = owningNode.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet registry: RegistryHandler | undefined;\n\t\t\tif (instance) {\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance);\n\t\t\t\tif (instanceData) {\n\t\t\t\t\tregistry = instanceData.registry;\n\t\t\t\t}\n\t\t\t} else if (id !== undefined) {\n\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\tif (widgetMeta) {\n\t\t\t\t\tif (!widgetMeta.registryHandler) {\n\t\t\t\t\t\twidgetMeta.registryHandler = new RegistryHandler();\n\t\t\t\t\t\twidgetMeta.registryHandler.base = widgetMeta.registry;\n\t\t\t\t\t\twidgetMeta.registryHandler.on('invalidate', widgetMeta.invalidator);\n\t\t\t\t\t}\n\t\t\t\t\tregistry = widgetMeta.registryHandler;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (registry) {\n\t\t\t\tlet registryLabel: symbol | string;\n\t\t\t\tif (isLazyDefine(wrapper.node.widgetConstructor)) {\n\t\t\t\t\tconst { label, registryItem } = wrapper.node.widgetConstructor;\n\t\t\t\t\tif (!registry.has(label)) {\n\t\t\t\t\t\tregistry.define(label, registryItem);\n\t\t\t\t\t}\n\t\t\t\t\tregistryLabel = label;\n\t\t\t\t} else {\n\t\t\t\t\tregistryLabel = wrapper.node.widgetConstructor as any;\n\t\t\t\t}\n\t\t\t\tlet item = registry.get(registryLabel) as any;\n\t\t\t\tif (isWNodeFactory(item)) {\n\t\t\t\t\tconst node = item(wrapper.node.properties, wrapper.node.children);\n\t\t\t\t\tif (isWidgetFunction(node.widgetConstructor)) {\n\t\t\t\t\t\twrapper.registryItem = node.widgetConstructor;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\twrapper.registryItem = item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction mapNodeToInstance(nodes: DNode[], wrapper: WNodeWrapper) {\n\t\twhile (nodes.length) {\n\t\t\tlet node = nodes.pop();\n\t\t\tif (isWNode(node) || isVNode(node)) {\n\t\t\t\tif (!_nodeToWrapperMap.has(node)) {\n\t\t\t\t\t_nodeToWrapperMap.set(node, wrapper);\n\t\t\t\t\tif (node.children && node.children.length) {\n\t\t\t\t\t\tnodes = [...nodes, ...node.children];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction renderedToWrapper(\n\t\trendered: DNode[],\n\t\tparent: DNodeWrapper,\n\t\tcurrentParent: DNodeWrapper | null\n\t): DNodeWrapper[] {\n\t\tconst { requiresInsertBefore, hasPreviousSiblings, namespace, depth } = parent;\n\t\tconst wrappedRendered: DNodeWrapper[] = [];\n\t\tconst hasParentWNode = isWNodeWrapper(parent);\n\t\tconst hasVirtualParentNode = isVirtualWrapper(parent);\n\t\tconst currentParentChildren =\n\t\t\t(isVNodeWrapper(currentParent) && _idToChildrenWrappers.get(currentParent.id)) || [];\n\t\tconst hasCurrentParentChildren = currentParentChildren.length > 0;\n\t\tconst insertBefore =\n\t\t\t((requiresInsertBefore || hasPreviousSiblings !== false) && (hasParentWNode || hasVirtualParentNode)) ||\n\t\t\t(hasCurrentParentChildren && rendered.length > 1);\n\t\tlet previousItem: DNodeWrapper | undefined;\n\t\tif (isWNodeWrapper(parent) && rendered.length) {\n\t\t\tmapNodeToInstance([...rendered], parent);\n\t\t}\n\t\tfor (let i = 0; i < rendered.length; i++) {\n\t\t\tlet renderedItem = rendered[i];\n\t\t\tif (!renderedItem || renderedItem === true) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (typeof renderedItem === 'string') {\n\t\t\t\trenderedItem = toTextVNode(renderedItem);\n\t\t\t}\n\t\t\tconst owningNode = _nodeToWrapperMap.get(renderedItem);\n\t\t\tconst wrapper: DNodeWrapper = {\n\t\t\t\tnode: renderedItem,\n\t\t\t\tdepth: depth + 1,\n\t\t\t\torder: i,\n\t\t\t\tparentId: parent.id,\n\t\t\t\trequiresInsertBefore: insertBefore,\n\t\t\t\thasParentWNode,\n\t\t\t\tnamespace: namespace\n\t\t\t} as DNodeWrapper;\n\t\t\tif (isVNode(renderedItem)) {\n\t\t\t\tif (renderedItem.deferredPropertiesCallback) {\n\t\t\t\t\t(wrapper as VNodeWrapper).deferredProperties = renderedItem.deferredPropertiesCallback(false);\n\t\t\t\t}\n\t\t\t\tif (renderedItem.properties.exitAnimation) {\n\t\t\t\t\tparent.hasAnimations = true;\n\t\t\t\t\tlet nextParent = _idToWrapperMap.get(parent.parentId);\n\t\t\t\t\twhile (nextParent) {\n\t\t\t\t\t\tif (nextParent.hasAnimations) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextParent.hasAnimations = true;\n\t\t\t\t\t\tnextParent = _idToWrapperMap.get(nextParent.parentId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (owningNode) {\n\t\t\t\twrapper.owningId = owningNode.id;\n\t\t\t}\n\t\t\tif (isWNode(renderedItem)) {\n\t\t\t\tresolveRegistryItem(wrapper as WNodeWrapper, (parent as any).instance, (parent as any).id);\n\t\t\t}\n\t\t\tif (previousItem) {\n\t\t\t\t_wrapperSiblingMap.set(previousItem, wrapper);\n\t\t\t}\n\t\t\twrappedRendered.push(wrapper);\n\t\t\tpreviousItem = wrapper;\n\t\t}\n\t\treturn wrappedRendered;\n\t}\n\n\tfunction findParentDomNode(currentNode: DNodeWrapper): Node | undefined {\n\t\tlet parentDomNode: Node | undefined;\n\t\tlet parentWrapper = _idToWrapperMap.get(currentNode.parentId);\n\n\t\twhile (!parentDomNode && parentWrapper) {\n\t\t\tif (\n\t\t\t\t!parentDomNode &&\n\t\t\t\tisVNodeWrapper(parentWrapper) &&\n\t\t\t\t!isVirtualWrapper(parentWrapper) &&\n\t\t\t\tparentWrapper.domNode\n\t\t\t) {\n\t\t\t\tparentDomNode = parentWrapper.domNode;\n\t\t\t}\n\t\t\tparentWrapper = _idToWrapperMap.get(parentWrapper.parentId);\n\t\t}\n\t\treturn parentDomNode;\n\t}\n\n\tfunction runDeferredProperties(next: VNodeWrapper) {\n\t\tconst { deferredPropertiesCallback } = next.node;\n\t\tif (deferredPropertiesCallback) {\n\t\t\tconst properties = next.node.properties;\n\t\t\t_deferredRenderCallbacks.push(() => {\n\t\t\t\tif (_idToWrapperMap.has(next.owningId)) {\n\t\t\t\t\tconst deferredProperties = next.deferredProperties;\n\t\t\t\t\tnext.deferredProperties = deferredPropertiesCallback(true);\n\t\t\t\t\tprocessProperties(next, {\n\t\t\t\t\t\tproperties: { ...deferredProperties, ...properties }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction findInsertBefore(next: DNodeWrapper) {\n\t\tlet insertBefore: Node | null = null;\n\t\tlet searchNode: DNodeWrapper | undefined = next;\n\t\twhile (!insertBefore) {\n\t\t\tconst nextSibling = _wrapperSiblingMap.get(searchNode);\n\t\t\tif (nextSibling) {\n\t\t\t\tlet domNode = nextSibling.domNode;\n\t\t\t\tif ((isWNodeWrapper(nextSibling) || isVirtualWrapper(nextSibling)) && nextSibling.childDomWrapperId) {\n\t\t\t\t\tconst childWrapper = _idToWrapperMap.get(nextSibling.childDomWrapperId);\n\t\t\t\t\tif (childWrapper) {\n\t\t\t\t\t\tdomNode = childWrapper.domNode;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (domNode && domNode.parentNode) {\n\t\t\t\t\tinsertBefore = domNode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsearchNode = nextSibling;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsearchNode = searchNode && _idToWrapperMap.get(searchNode.parentId);\n\t\t\tif (!searchNode || (isVNodeWrapper(searchNode) && !isVirtualWrapper(searchNode))) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn insertBefore;\n\t}\n\n\tfunction setValue(domNode: any, propValue?: any, previousValue?: any) {\n\t\tconst domValue = domNode.value;\n\t\tconst onInputValue = domNode['oninput-value'];\n\t\tconst onSelectValue = domNode['select-value'];\n\n\t\tif (onSelectValue && domValue !== onSelectValue) {\n\t\t\tdomNode.value = onSelectValue;\n\t\t\tif (domNode.value === onSelectValue) {\n\t\t\t\tdomNode['select-value'] = undefined;\n\t\t\t}\n\t\t} else if ((onInputValue && domValue === onInputValue) || propValue !== previousValue) {\n\t\t\tdomNode.value = propValue;\n\t\t\tdomNode['oninput-value'] = undefined;\n\t\t}\n\t}\n\n\tfunction setProperties(\n\t\tdomNode: HTMLElement,\n\t\tcurrentProperties: VNodeProperties = {},\n\t\tnextWrapper: VNodeWrapper,\n\t\tincludesEventsAndAttributes = true\n\t): void {\n\t\tconst properties = nextWrapper.deferredProperties\n\t\t\t? { ...nextWrapper.deferredProperties, ...nextWrapper.node.properties }\n\t\t\t: nextWrapper.node.properties;\n\t\tconst propNames = Object.keys(properties);\n\t\tconst propCount = propNames.length;\n\t\tif (propNames.indexOf('classes') === -1 && currentProperties.classes) {\n\t\t\tdomNode.removeAttribute('class');\n\t\t}\n\n\t\tincludesEventsAndAttributes && removeOrphanedEvents(domNode, currentProperties, properties);\n\n\t\tfor (let i = 0; i < propCount; i++) {\n\t\t\tconst propName = propNames[i];\n\t\t\tlet propValue = properties[propName];\n\t\t\tconst previousValue = currentProperties[propName];\n\t\t\tif (propName === 'classes') {\n\t\t\t\tconst previousClassString = createClassPropValue(previousValue);\n\t\t\t\tlet currentClassString = createClassPropValue(propValue);\n\t\t\t\tif (previousClassString !== currentClassString) {\n\t\t\t\t\tif (currentClassString) {\n\t\t\t\t\t\tif (nextWrapper.merged) {\n\t\t\t\t\t\t\tconst domClasses = (domNode.getAttribute('class') || '').split(' ');\n\t\t\t\t\t\t\tfor (let i = 0; i < domClasses.length; i++) {\n\t\t\t\t\t\t\t\tif (currentClassString.indexOf(domClasses[i]) === -1) {\n\t\t\t\t\t\t\t\t\tcurrentClassString = `${domClasses[i]} ${currentClassString}`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdomNode.setAttribute('class', currentClassString);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdomNode.removeAttribute('class');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (nodeOperations.indexOf(propName) !== -1) {\n\t\t\t\tnodeOperation(propName, propValue, previousValue, domNode);\n\t\t\t} else if (propName === 'styles') {\n\t\t\t\tconst styleNames = Object.keys(propValue);\n\t\t\t\tconst styleCount = styleNames.length;\n\t\t\t\tfor (let j = 0; j < styleCount; j++) {\n\t\t\t\t\tconst styleName = styleNames[j];\n\t\t\t\t\tconst newStyleValue = propValue[styleName];\n\t\t\t\t\tconst oldStyleValue = previousValue && previousValue[styleName];\n\t\t\t\t\tif (newStyleValue === oldStyleValue) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t(domNode.style as any)[styleName] = newStyleValue || '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!propValue && typeof previousValue === 'string') {\n\t\t\t\t\tpropValue = '';\n\t\t\t\t}\n\t\t\t\tif (propName === 'value') {\n\t\t\t\t\tif ((domNode as HTMLElement).tagName === 'SELECT') {\n\t\t\t\t\t\t(domNode as any)['select-value'] = propValue;\n\t\t\t\t\t}\n\t\t\t\t\tsetValue(domNode, propValue, previousValue);\n\t\t\t\t} else if (propName !== 'key' && propValue !== previousValue) {\n\t\t\t\t\tconst type = typeof propValue;\n\t\t\t\t\tif (type === 'function' && propName.lastIndexOf('on', 0) === 0 && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateEvent(domNode, propName.substr(2), propValue, previousValue);\n\t\t\t\t\t} else if (type === 'string' && propName !== 'innerHTML' && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateAttribute(domNode, propName, propValue, nextWrapper.namespace);\n\t\t\t\t\t} else if (propName === 'scrollLeft' || propName === 'scrollTop') {\n\t\t\t\t\t\tif ((domNode as any)[propName] !== propValue) {\n\t\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction runDeferredRenderCallbacks() {\n\t\tconst { sync } = _mountOptions;\n\t\tconst callbacks = _deferredRenderCallbacks;\n\t\t_deferredRenderCallbacks = [];\n\t\tif (callbacks.length) {\n\t\t\tconst run = () => {\n\t\t\t\tlet callback: Function | undefined;\n\t\t\t\twhile ((callback = callbacks.shift())) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (sync) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tglobal.requestAnimationFrame(run);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction runAfterRenderCallbacks() {\n\t\tconst { sync } = _mountOptions;\n\t\tconst callbacks = _idleCallbacks;\n\t\t_idleCallbacks = [];\n\t\tif (callbacks.length) {\n\t\t\tconst run = () => {\n\t\t\t\tlet callback: Function | undefined;\n\t\t\t\twhile ((callback = callbacks.shift())) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (sync) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tif (global.requestIdleCallback) {\n\t\t\t\t\tglobal.requestIdleCallback(run);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(run);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction processProperties(next: VNodeWrapper, previousProperties: PreviousProperties) {\n\t\tif (next.node.attributes && next.node.events) {\n\t\t\tupdateAttributes(\n\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\tpreviousProperties.attributes || {},\n\t\t\t\tnext.node.attributes,\n\t\t\t\tnext.namespace\n\t\t\t);\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next, false);\n\t\t\tconst events = next.node.events || {};\n\t\t\tif (previousProperties.events) {\n\t\t\t\tremoveOrphanedEvents(\n\t\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\t\tpreviousProperties.events || {},\n\t\t\t\t\tnext.node.events,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t\tpreviousProperties.events = previousProperties.events || {};\n\t\t\tObject.keys(events).forEach((event) => {\n\t\t\t\tupdateEvent(next.domNode as HTMLElement, event, events[event], previousProperties.events[event]);\n\t\t\t});\n\t\t} else {\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next);\n\t\t}\n\t}\n\n\tfunction mount(mountOptions: Partial<MountOptions> = {}) {\n\t\t_mountOptions = { ..._mountOptions, ...mountOptions };\n\t\tconst { domNode } = _mountOptions;\n\t\tconst renderResult = wrapNodes(renderer)({});\n\t\tconst nextWrapper = {\n\t\t\tid: `${wrapperId++}`,\n\t\t\tnode: renderResult,\n\t\t\torder: 0,\n\t\t\tdepth: 1,\n\t\t\towningId: '-1',\n\t\t\tparentId: '-1',\n\t\t\tsiblingId: '-1',\n\t\t\tproperties: {}\n\t\t};\n\t\t_idToWrapperMap.set('-1', {\n\t\t\tid: `-1`,\n\t\t\tdepth: 0,\n\t\t\torder: 0,\n\t\t\towningId: '',\n\t\t\tdomNode,\n\t\t\tnode: v('fake'),\n\t\t\tparentId: '-1'\n\t\t});\n\t\t_processQueue.push({\n\t\t\tcurrent: [],\n\t\t\tnext: [nextWrapper],\n\t\t\tmeta: { mergeNodes: arrayFrom(domNode.childNodes) }\n\t\t});\n\t\t_runProcessQueue();\n\t\t_runDomInstructionQueue();\n\t\t_cleanUpMergedNodes();\n\t\t_insertBeforeMap = undefined;\n\t\t_runCallbacks();\n\t}\n\n\tfunction invalidate() {\n\t\tparentInvalidate && parentInvalidate();\n\t}\n\n\tfunction _schedule(): void {\n\t\tconst { sync } = _mountOptions;\n\t\tif (sync) {\n\t\t\t_runInvalidationQueue();\n\t\t} else if (!_renderScheduled) {\n\t\t\t_renderScheduled = global.requestAnimationFrame(() => {\n\t\t\t\t_runInvalidationQueue();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction getWNodeWrapper(id: string) {\n\t\tconst wrapper = _idToWrapperMap.get(id);\n\t\tif (wrapper && isWNodeWrapper(wrapper)) {\n\t\t\treturn wrapper;\n\t\t}\n\t}\n\n\tfunction _runInvalidationQueue() {\n\t\t_renderScheduled = undefined;\n\t\tlet invalidationQueue = [..._invalidationQueue];\n\t\tconst previouslyRendered = [];\n\t\t_invalidationQueue = [];\n\t\tinvalidationQueue.sort((a, b) => {\n\t\t\tlet result = b.depth - a.depth;\n\t\t\tif (result === 0) {\n\t\t\t\tresult = b.order - a.order;\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t\tif (_deferredProcessQueue.length) {\n\t\t\t_processQueue = [..._deferredProcessQueue];\n\t\t\t_deferredProcessQueue = [];\n\t\t\t_runProcessQueue();\n\t\t\tif (_deferredProcessQueue.length) {\n\t\t\t\t_invalidationQueue = [...invalidationQueue];\n\t\t\t\tinvalidationQueue = [];\n\t\t\t}\n\t\t}\n\t\tlet item: InvalidationQueueItem | undefined;\n\t\twhile ((item = invalidationQueue.pop())) {\n\t\t\tlet { id } = item;\n\t\t\tconst current = getWNodeWrapper(id);\n\t\t\tif (!current || previouslyRendered.indexOf(id) !== -1 || !_idToWrapperMap.has(current.parentId)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tpreviouslyRendered.push(id);\n\t\t\tconst sibling = _wrapperSiblingMap.get(current);\n\t\t\tconst next = {\n\t\t\t\tnode: {\n\t\t\t\t\ttype: WNODE,\n\t\t\t\t\twidgetConstructor: current.node.widgetConstructor,\n\t\t\t\t\tproperties: current.properties || {},\n\t\t\t\t\tchildren: current.node.children || []\n\t\t\t\t},\n\t\t\t\tinstance: current.instance,\n\t\t\t\tid: current.id,\n\t\t\t\tproperties: current.properties,\n\t\t\t\tdepth: current.depth,\n\t\t\t\torder: current.order,\n\t\t\t\towningId: current.owningId,\n\t\t\t\tparentId: current.parentId,\n\t\t\t\tregistryItem: current.registryItem\n\t\t\t};\n\n\t\t\tsibling && _wrapperSiblingMap.set(next, sibling);\n\t\t\tconst result = _updateWidget({ current, next });\n\t\t\tif (result && result.item) {\n\t\t\t\t_processQueue.push(result.item);\n\t\t\t\t_idToWrapperMap.set(id, next);\n\t\t\t\t_runProcessQueue();\n\t\t\t}\n\t\t}\n\t\t_runDomInstructionQueue();\n\t\t_cleanUpMergedNodes();\n\t\t_runCallbacks();\n\t}\n\n\tfunction _cleanUpMergedNodes() {\n\t\tif (_deferredProcessQueue.length === 0) {\n\t\t\tlet mergedNode: Node | undefined;\n\t\t\twhile ((mergedNode = _allMergedNodes.pop())) {\n\t\t\t\tmergedNode.parentNode && mergedNode.parentNode.removeChild(mergedNode);\n\t\t\t}\n\t\t\t_mountOptions.merge = false;\n\t\t}\n\t}\n\n\tfunction _runProcessQueue() {\n\t\tlet item: DetachApplication | AttachApplication | ProcessItem | undefined;\n\t\twhile ((item = _processQueue.pop())) {\n\t\t\tif (isAttachApplication(item)) {\n\t\t\t\titem.type === 'attach' && setDomNodeOnParentWrapper(item.id);\n\t\t\t\tif (item.instance) {\n\t\t\t\t\t_applicationQueue.push(item as any);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst { current, next, meta } = item;\n\t\t\t\t_process(current || EMPTY_ARRAY, next || EMPTY_ARRAY, meta);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _runDomInstructionQueue(): void {\n\t\t_applicationQueue.reverse();\n\t\tlet item: ApplicationInstruction | undefined;\n\t\twhile ((item = _applicationQueue.pop())) {\n\t\t\tif (item.type === 'create') {\n\t\t\t\tconst {\n\t\t\t\t\tparentDomNode,\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: { domNode, merged, requiresInsertBefore, node }\n\t\t\t\t} = item;\n\n\t\t\t\tprocessProperties(next, { properties: {} });\n\t\t\t\trunDeferredProperties(next);\n\t\t\t\tif (!merged) {\n\t\t\t\t\tlet insertBefore: any;\n\t\t\t\t\tif (requiresInsertBefore) {\n\t\t\t\t\t\tinsertBefore = findInsertBefore(next);\n\t\t\t\t\t} else if (_insertBeforeMap) {\n\t\t\t\t\t\tinsertBefore = _insertBeforeMap.get(next);\n\t\t\t\t\t}\n\t\t\t\t\tparentDomNode.insertBefore(domNode!, insertBefore);\n\t\t\t\t\tif (isDomVNode(next.node) && next.node.onAttach) {\n\t\t\t\t\t\tnext.node.onAttach();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((domNode as HTMLElement).tagName === 'OPTION' && domNode!.parentElement) {\n\t\t\t\t\tsetValue(domNode!.parentElement);\n\t\t\t\t}\n\t\t\t\tconst { enterAnimation, enterAnimationActive } = node.properties;\n\t\t\t\tif (_mountOptions.transition && enterAnimation && enterAnimation !== true) {\n\t\t\t\t\t_mountOptions.transition.enter(domNode as HTMLElement, enterAnimation, enterAnimationActive);\n\t\t\t\t}\n\t\t\t\tconst owningWrapper = _nodeToWrapperMap.get(next.node);\n\t\t\t\tif (owningWrapper && node.properties.key != null) {\n\t\t\t\t\tif (owningWrapper.instance) {\n\t\t\t\t\t\tconst instanceData = widgetInstanceMap.get(owningWrapper.instance);\n\t\t\t\t\t\tinstanceData && instanceData.nodeHandler.add(domNode as HTMLElement, `${node.properties.key}`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddNodeToMap(owningWrapper.id, node.properties.key, domNode as HTMLElement);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\titem.next.inserted = true;\n\t\t\t} else if (item.type === 'update') {\n\t\t\t\tconst {\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: { domNode },\n\t\t\t\t\tcurrent,\n\t\t\t\t\tcurrent: { domNode: currentDomNode }\n\t\t\t\t} = item;\n\t\t\t\tif (isTextNode(domNode) && isTextNode(currentDomNode) && domNode !== currentDomNode) {\n\t\t\t\t\tcurrentDomNode.parentNode && currentDomNode.parentNode.replaceChild(domNode, currentDomNode);\n\t\t\t\t} else {\n\t\t\t\t\tconst previousProperties = buildPreviousProperties(domNode, current);\n\t\t\t\t\tprocessProperties(next, previousProperties);\n\t\t\t\t\trunDeferredProperties(next);\n\t\t\t\t}\n\t\t\t} else if (item.type === 'delete') {\n\t\t\t\tconst { current } = item;\n\t\t\t\tconst { exitAnimation, exitAnimationActive } = current.node.properties;\n\t\t\t\tif (_mountOptions.transition && exitAnimation && exitAnimation !== true) {\n\t\t\t\t\t_mountOptions.transition.exit(current.domNode as HTMLElement, exitAnimation, exitAnimationActive);\n\t\t\t\t} else {\n\t\t\t\t\tcurrent.domNode!.parentNode!.removeChild(current.domNode!);\n\t\t\t\t}\n\t\t\t} else if (item.type === 'attach') {\n\t\t\t\tconst { instance, attached } = item;\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance);\n\t\t\t\tif (instanceData) {\n\t\t\t\t\tinstanceData.nodeHandler.addRoot();\n\t\t\t\t\tattached && instanceData.onAttach();\n\t\t\t\t}\n\t\t\t} else if (item.type === 'detach') {\n\t\t\t\tif (item.current.instance) {\n\t\t\t\t\tconst instanceData = widgetInstanceMap.get(item.current.instance);\n\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t}\n\t\t\t\titem.current.instance = undefined;\n\t\t\t}\n\t\t}\n\t\tif (_deferredProcessQueue.length === 0) {\n\t\t\t_nodeToWrapperMap = new WeakMap();\n\t\t}\n\t}\n\n\tfunction _runCallbacks() {\n\t\trunAfterRenderCallbacks();\n\t\trunDeferredRenderCallbacks();\n\t}\n\n\tfunction _processMergeNodes(next: DNodeWrapper, mergeNodes: Node[]) {\n\t\tconst { merge } = _mountOptions;\n\t\tif (merge && mergeNodes.length) {\n\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\tlet {\n\t\t\t\t\tnode: { tag }\n\t\t\t\t} = next;\n\t\t\t\tfor (let i = 0; i < mergeNodes.length; i++) {\n\t\t\t\t\tconst domElement = mergeNodes[i] as Element;\n\t\t\t\t\tconst tagName = domElement.tagName || '';\n\t\t\t\t\tif (tag.toUpperCase() === tagName.toUpperCase()) {\n\t\t\t\t\t\tconst mergeNodeIndex = _allMergedNodes.indexOf(domElement);\n\t\t\t\t\t\tif (mergeNodeIndex !== -1) {\n\t\t\t\t\t\t\t_allMergedNodes.splice(mergeNodeIndex, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmergeNodes.splice(i, 1);\n\t\t\t\t\t\tnext.domNode = domElement;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnext.mergeNodes = mergeNodes;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction registerDistinguishableCallback(childNodes: DNodeWrapper[], index: number) {\n\t\t_idleCallbacks.push(() => {\n\t\t\tconst parentWNodeWrapper = getWNodeWrapper(childNodes[index].owningId);\n\t\t\tcheckDistinguishable(childNodes, index, parentWNodeWrapper);\n\t\t});\n\t}\n\n\tfunction createKeyMap(wrappers: DNodeWrapper[]): (string | number)[] | false {\n\t\tconst keys: (string | number)[] = [];\n\t\tfor (let i = 0; i < wrappers.length; i++) {\n\t\t\tconst wrapper = wrappers[i];\n\t\t\tif (wrapper.node.properties.key != null) {\n\t\t\t\tkeys.push(wrapper.node.properties.key);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn keys;\n\t}\n\n\tfunction _process(current: DNodeWrapper[], next: DNodeWrapper[], meta: ProcessMeta = {}): void {\n\t\tlet { mergeNodes = [], oldIndex = 0, newIndex = 0 } = meta;\n\t\tconst currentLength = current.length;\n\t\tconst nextLength = next.length;\n\t\tconst hasPreviousSiblings = currentLength > 1 || (currentLength > 0 && currentLength < nextLength);\n\t\tlet instructions: Instruction[] = [];\n\t\tlet replace = false;\n\t\tif (oldIndex === 0 && newIndex === 0 && currentLength) {\n\t\t\tconst currentKeys = createKeyMap(current);\n\t\t\tif (currentKeys) {\n\t\t\t\tconst nextKeys = createKeyMap(next);\n\t\t\t\tif (nextKeys) {\n\t\t\t\t\tfor (let i = 0; i < currentKeys.length; i++) {\n\t\t\t\t\t\tif (nextKeys.indexOf(currentKeys[i]) !== -1) {\n\t\t\t\t\t\t\tinstructions = [];\n\t\t\t\t\t\t\treplace = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treplace = true;\n\t\t\t\t\t\tinstructions.push({ current: current[i], next: undefined });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (replace || (currentLength === 0 && !_mountOptions.merge)) {\n\t\t\tfor (let i = 0; i < next.length; i++) {\n\t\t\t\tinstructions.push({ current: undefined, next: next[i] });\n\t\t\t}\n\t\t} else {\n\t\t\tif (newIndex < nextLength) {\n\t\t\t\tlet currentWrapper = oldIndex < currentLength ? current[oldIndex] : undefined;\n\t\t\t\tconst nextWrapper = next[newIndex];\n\t\t\t\tnextWrapper.hasPreviousSiblings = hasPreviousSiblings;\n\n\t\t\t\t_processMergeNodes(nextWrapper, mergeNodes);\n\n\t\t\t\tif (currentWrapper && same(currentWrapper, nextWrapper)) {\n\t\t\t\t\toldIndex++;\n\t\t\t\t\tnewIndex++;\n\t\t\t\t\tif (isVNodeWrapper(currentWrapper) && isVNodeWrapper(nextWrapper)) {\n\t\t\t\t\t\tnextWrapper.inserted = currentWrapper.inserted;\n\t\t\t\t\t}\n\t\t\t\t\tinstructions.push({ current: currentWrapper, next: nextWrapper });\n\t\t\t\t} else if (!currentWrapper || findIndexOfChild(current, nextWrapper, oldIndex + 1) === -1) {\n\t\t\t\t\thas('dojo-debug') && current.length && registerDistinguishableCallback(next, newIndex);\n\t\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\t\tnewIndex++;\n\t\t\t\t} else if (findIndexOfChild(next, currentWrapper, newIndex + 1) === -1) {\n\t\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n\t\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\t\toldIndex++;\n\t\t\t\t} else {\n\t\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(next, newIndex);\n\t\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n\t\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\t\toldIndex++;\n\t\t\t\t\tnewIndex++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (newIndex < nextLength) {\n\t\t\t\t_processQueue.push({ current, next, meta: { mergeNodes, oldIndex, newIndex } });\n\t\t\t}\n\t\t\tif (currentLength > oldIndex && newIndex >= nextLength) {\n\t\t\t\tfor (let i = oldIndex; i < currentLength; i++) {\n\t\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, i);\n\t\t\t\t\tinstructions.push({ current: current[i], next: undefined });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < instructions.length; i++) {\n\t\t\tconst result = _processOne(instructions[i]);\n\t\t\tif (result === false) {\n\t\t\t\tif (_mountOptions.merge && mergeNodes.length) {\n\t\t\t\t\tif (newIndex < nextLength) {\n\t\t\t\t\t\t_processQueue.pop();\n\t\t\t\t\t}\n\t\t\t\t\t_processQueue.push({ next, current, meta });\n\t\t\t\t\t_deferredProcessQueue = _processQueue;\n\t\t\t\t\t_processQueue = [];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst { widget, item, dom } = result;\n\t\t\twidget && _processQueue.push(widget);\n\t\t\titem && _processQueue.push(item);\n\t\t\tdom && _applicationQueue.push(dom);\n\t\t}\n\t}\n\n\tfunction _processOne({ current, next }: Instruction): ProcessResult | false {\n\t\tif (current !== next) {\n\t\t\tif (!current && next) {\n\t\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\t\treturn _createDom({ next });\n\t\t\t\t} else {\n\t\t\t\t\treturn _createWidget({ next });\n\t\t\t\t}\n\t\t\t} else if (current && next) {\n\t\t\t\tif (isVNodeWrapper(current) && isVNodeWrapper(next)) {\n\t\t\t\t\treturn _updateDom({ current, next });\n\t\t\t\t} else if (isWNodeWrapper(current) && isWNodeWrapper(next)) {\n\t\t\t\t\treturn _updateWidget({ current, next });\n\t\t\t\t}\n\t\t\t} else if (current && !next) {\n\t\t\t\tif (isVNodeWrapper(current)) {\n\t\t\t\t\treturn _removeDom({ current });\n\t\t\t\t} else if (isWNodeWrapper(current)) {\n\t\t\t\t\treturn _removeWidget({ current });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {};\n\t}\n\n\tfunction resolveMiddleware(\n\t\tmiddlewares: any,\n\t\tid: string,\n\t\tmiddlewareIds: string[] = []\n\t): { middlewares: any; ids: string[] } {\n\t\tconst keys = Object.keys(middlewares);\n\t\tconst results: any = {};\n\t\tconst uniqueId = `${id}-${metaId++}`;\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst middleware = middlewares[keys[i]]();\n\t\t\tconst payload: any = {\n\t\t\t\tid: uniqueId,\n\t\t\t\tproperties: () => {\n\t\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\t\tif (widgetMeta) {\n\t\t\t\t\t\treturn { ...widgetMeta.properties };\n\t\t\t\t\t}\n\t\t\t\t\treturn {};\n\t\t\t\t},\n\t\t\t\tchildren: () => {\n\t\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\t\tif (widgetMeta) {\n\t\t\t\t\t\treturn widgetMeta.children;\n\t\t\t\t\t}\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (middleware.middlewares) {\n\t\t\t\tconst { middlewares: resolvedMiddleware } = resolveMiddleware(\n\t\t\t\t\tmiddleware.middlewares,\n\t\t\t\t\tid,\n\t\t\t\t\tmiddlewareIds\n\t\t\t\t);\n\t\t\t\tpayload.middleware = resolvedMiddleware;\n\t\t\t\tresults[keys[i]] = middleware.callback(payload);\n\t\t\t} else {\n\t\t\t\tresults[keys[i]] = middleware.callback(payload);\n\t\t\t}\n\t\t}\n\t\tmiddlewareIds.push(uniqueId);\n\t\treturn { middlewares: results, ids: middlewareIds };\n\t}\n\n\tfunction _createWidget({ next }: CreateWidgetInstruction): ProcessResult | false {\n\t\tlet {\n\t\t\tnode: { widgetConstructor }\n\t\t} = next;\n\t\tlet { registry } = _mountOptions;\n\t\tlet Constructor = next.registryItem || widgetConstructor;\n\t\tif (!isWidget(Constructor)) {\n\t\t\tresolveRegistryItem(next);\n\t\t\tif (!next.registryItem) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tConstructor = next.registryItem;\n\t\t}\n\n\t\tlet rendered: RenderResult;\n\t\tlet invalidate: () => void;\n\t\tnext.properties = next.node.properties;\n\t\tnext.id = next.id || `${wrapperId++}`;\n\t\t_idToWrapperMap.set(next.id, next);\n\t\tconst { id, depth, order } = next;\n\t\tif (!isWidgetBaseConstructor(Constructor)) {\n\t\t\tlet widgetMeta = widgetMetaMap.get(id);\n\t\t\tif (!widgetMeta) {\n\t\t\t\tinvalidate = () => {\n\t\t\t\t\tconst widgetMeta = widgetMetaMap.get(id);\n\t\t\t\t\tif (widgetMeta) {\n\t\t\t\t\t\twidgetMeta.dirty = true;\n\t\t\t\t\t\tif (!widgetMeta.rendering && _idToWrapperMap.has(id)) {\n\t\t\t\t\t\t\t_invalidationQueue.push({ id, depth, order });\n\t\t\t\t\t\t\t_schedule();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\twidgetMeta = {\n\t\t\t\t\tmountNode: _mountOptions.domNode,\n\t\t\t\t\tdirty: false,\n\t\t\t\t\tinvalidator: invalidate,\n\t\t\t\t\tproperties: next.node.properties,\n\t\t\t\t\tchildren: next.node.children,\n\t\t\t\t\tdeferRefs: 0,\n\t\t\t\t\trendering: true,\n\t\t\t\t\tmiddleware: {},\n\t\t\t\t\tmiddlewareIds: [],\n\t\t\t\t\tregistry: _mountOptions.registry\n\t\t\t\t};\n\n\t\t\t\twidgetMetaMap.set(next.id, widgetMeta);\n\t\t\t\tif ((Constructor as any).middlewares) {\n\t\t\t\t\tconst { middlewares, ids } = resolveMiddleware((Constructor as any).middlewares, id);\n\t\t\t\t\twidgetMeta.middleware = middlewares;\n\t\t\t\t\twidgetMeta.middlewareIds = ids;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tinvalidate = widgetMeta.invalidator;\n\t\t\t}\n\n\t\t\trendered = Constructor({\n\t\t\t\tid,\n\t\t\t\tproperties: () => next.node.properties,\n\t\t\t\tchildren: () => next.node.children,\n\t\t\t\tmiddleware: widgetMeta.middleware\n\t\t\t});\n\t\t\twidgetMeta.rendering = false;\n\t\t\tif (widgetMeta.deferRefs > 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tlet instance = new Constructor() as WidgetBaseInterface & {\n\t\t\t\tinvalidate: any;\n\t\t\t\tregistry: any;\n\t\t\t};\n\t\t\tinstance.registry.base = registry;\n\t\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\t\tinvalidate = () => {\n\t\t\t\tinstanceData.dirty = true;\n\t\t\t\tif (!instanceData.rendering && _idToWrapperMap.has(id)) {\n\t\t\t\t\t_invalidationQueue.push({ id, depth, order });\n\t\t\t\t\t_schedule();\n\t\t\t\t}\n\t\t\t};\n\t\t\tinstanceData.invalidate = invalidate;\n\t\t\tinstanceData.rendering = true;\n\t\t\tinstance.__setProperties__(next.node.properties);\n\t\t\tinstance.__setChildren__(next.node.children);\n\t\t\tnext.instance = instance;\n\t\t\trendered = instance.__render__();\n\t\t\tinstanceData.rendering = false;\n\t\t}\n\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tif (rendered) {\n\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\tchildren = renderedToWrapper(rendered, next, null);\n\t\t\t_idToChildrenWrappers.set(id, children);\n\t\t}\n\n\t\tif (!parentInvalidate && !(Constructor as any).isWNodeWrapper) {\n\t\t\tparentInvalidate = invalidate;\n\t\t}\n\n\t\treturn {\n\t\t\titem: {\n\t\t\t\tnext: children,\n\t\t\t\tmeta: { mergeNodes: next.mergeNodes }\n\t\t\t},\n\t\t\twidget: { type: 'attach', instance: next.instance, id, attached: true }\n\t\t};\n\t}\n\n\tfunction _updateWidget({ current, next }: UpdateWidgetInstruction): ProcessResult {\n\t\tcurrent = getWNodeWrapper(current.id) || current;\n\t\tconst { instance, domNode, hasAnimations } = current;\n\t\tlet {\n\t\t\tnode: { widgetConstructor }\n\t\t} = next;\n\t\tconst Constructor = next.registryItem || widgetConstructor;\n\n\t\tif (!isWidget(Constructor)) {\n\t\t\treturn {};\n\t\t}\n\t\tlet rendered: RenderResult;\n\t\tlet processResult: ProcessResult = {};\n\t\tlet didRender = false;\n\t\tlet currentChildren = _idToChildrenWrappers.get(current.id);\n\t\tnext.hasAnimations = hasAnimations;\n\t\tnext.id = current.id;\n\t\tnext.childDomWrapperId = current.childDomWrapperId;\n\t\tnext.properties = next.node.properties;\n\t\t_wrapperSiblingMap.delete(current);\n\t\tif (domNode && domNode.parentNode) {\n\t\t\tnext.domNode = domNode;\n\t\t}\n\n\t\tif (!isWidgetBaseConstructor(Constructor)) {\n\t\t\tconst widgetMeta = widgetMetaMap.get(next.id);\n\t\t\tif (widgetMeta) {\n\t\t\t\twidgetMeta.properties = next.properties;\n\t\t\t\twidgetMeta.rendering = true;\n\t\t\t\trunDiffs(widgetMeta, current.properties, next.properties);\n\t\t\t\tif (current.node.children.length > 0 || next.node.children.length > 0) {\n\t\t\t\t\twidgetMeta.dirty = true;\n\t\t\t\t}\n\t\t\t\tif (!widgetMeta.dirty) {\n\t\t\t\t\tpropertiesDiff(\n\t\t\t\t\t\tcurrent.properties,\n\t\t\t\t\t\tnext.properties,\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\twidgetMeta.dirty = true;\n\t\t\t\t\t\t},\n\t\t\t\t\t\twidgetMeta.customDiffProperties ? [...widgetMeta.customDiffProperties.values()] : []\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (widgetMeta.dirty) {\n\t\t\t\t\t_idToChildrenWrappers.delete(next.id);\n\t\t\t\t\tdidRender = true;\n\t\t\t\t\twidgetMeta.dirty = false;\n\t\t\t\t\trendered = Constructor({\n\t\t\t\t\t\tid: next.id,\n\t\t\t\t\t\tproperties: () => next.node.properties,\n\t\t\t\t\t\tchildren: () => next.node.children,\n\t\t\t\t\t\tmiddleware: widgetMeta.middleware\n\t\t\t\t\t});\n\t\t\t\t\tif (widgetMeta.deferRefs > 0) {\n\t\t\t\t\t\trendered = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twidgetMeta.rendering = false;\n\t\t\t}\n\t\t} else {\n\t\t\tconst instanceData = widgetInstanceMap.get(instance!)!;\n\t\t\tnext.instance = instance;\n\t\t\tinstanceData.rendering = true;\n\t\t\tinstance!.__setProperties__(next.node.properties);\n\t\t\tinstance!.__setChildren__(next.node.children);\n\t\t\tif (instanceData.dirty) {\n\t\t\t\tdidRender = true;\n\t\t\t\t_idToChildrenWrappers.delete(next.id);\n\t\t\t\trendered = instance!.__render__();\n\t\t\t}\n\t\t\tinstanceData.rendering = false;\n\t\t}\n\t\t_idToWrapperMap.set(next.id, next);\n\t\tprocessResult.widget = { type: 'attach', instance, id: next.id, attached: false };\n\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tif (rendered) {\n\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\tchildren = renderedToWrapper(rendered, next, current);\n\t\t\t_idToChildrenWrappers.set(next.id, children);\n\t\t}\n\n\t\tif (didRender) {\n\t\t\tprocessResult.item = {\n\t\t\t\tcurrent: currentChildren,\n\t\t\t\tnext: children,\n\t\t\t\tmeta: {}\n\t\t\t};\n\t\t}\n\t\treturn processResult;\n\t}\n\n\tfunction _removeWidget({ current }: RemoveWidgetInstruction): ProcessResult {\n\t\tcurrent = getWNodeWrapper(current.id) || current;\n\t\t_idToWrapperMap.delete(current.id);\n\t\tconst meta = widgetMetaMap.get(current.id);\n\t\tlet currentChildren = _idToChildrenWrappers.get(current.id);\n\t\t_idToChildrenWrappers.delete(current.id);\n\t\t_wrapperSiblingMap.delete(current);\n\t\tlet processResult: ProcessResult = {\n\t\t\titem: {\n\t\t\t\tcurrent: currentChildren,\n\t\t\t\tmeta: {}\n\t\t\t}\n\t\t};\n\t\tif (meta) {\n\t\t\tmeta.registryHandler && meta.registryHandler.destroy();\n\t\t\tdestroyHandles(meta);\n\t\t\twidgetMetaMap.delete(current.id);\n\t\t} else {\n\t\t\tprocessResult.widget = { type: 'detach', current, instance: current.instance };\n\t\t}\n\n\t\treturn processResult;\n\t}\n\n\tfunction setDomNodeOnParentWrapper(id: string) {\n\t\tlet wrapper = _idToWrapperMap.get(id)!;\n\t\tlet children = [...(_idToChildrenWrappers.get(id) || [])];\n\t\tlet child: DNodeWrapper | undefined;\n\t\twhile (children.length && !wrapper.domNode) {\n\t\t\tchild = children.shift();\n\t\t\tif (child) {\n\t\t\t\tif (child.domNode) {\n\t\t\t\t\twrapper.childDomWrapperId = child.id;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlet nextChildren = _idToChildrenWrappers.get(child.id);\n\t\t\t\tif (nextChildren) {\n\t\t\t\t\tchildren = [...nextChildren, ...children];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _createDom({ next }: CreateDomInstruction): ProcessResult {\n\t\tconst parentDomNode = findParentDomNode(next)!;\n\t\tconst isVirtual = isVirtualWrapper(next);\n\t\tconst isBody = isBodyWrapper(next);\n\t\tlet mergeNodes: Node[] = [];\n\t\tnext.id = `${wrapperId++}`;\n\t\t_idToWrapperMap.set(next.id, next);\n\t\tif (!next.domNode) {\n\t\t\tif ((next.node as any).domNode) {\n\t\t\t\tnext.domNode = (next.node as any).domNode;\n\t\t\t} else {\n\t\t\t\tif (next.node.tag === 'svg') {\n\t\t\t\t\tnext.namespace = NAMESPACE_SVG;\n\t\t\t\t}\n\t\t\t\tif (isBody) {\n\t\t\t\t\tnext.domNode = global.document.body;\n\t\t\t\t} else if (next.node.tag && !isVirtual) {\n\t\t\t\t\tif (next.namespace) {\n\t\t\t\t\t\tnext.domNode = global.document.createElementNS(next.namespace, next.node.tag);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext.domNode = global.document.createElement(next.node.tag);\n\t\t\t\t\t}\n\t\t\t\t} else if (next.node.text != null) {\n\t\t\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_insertBeforeMap && _allMergedNodes.length) {\n\t\t\t\tif (parentDomNode === _allMergedNodes[0].parentNode) {\n\t\t\t\t\t_insertBeforeMap.set(next, _allMergedNodes[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (_mountOptions.merge) {\n\t\t\tnext.merged = true;\n\t\t\tif (isTextNode(next.domNode)) {\n\t\t\t\tif (next.domNode.data !== next.node.text) {\n\t\t\t\t\t_allMergedNodes = [next.domNode, ..._allMergedNodes];\n\t\t\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t\t\t\tnext.merged = false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmergeNodes = arrayFrom(next.domNode.childNodes);\n\t\t\t\t_allMergedNodes = [..._allMergedNodes, ...mergeNodes];\n\t\t\t}\n\t\t}\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tif (next.domNode || isVirtual) {\n\t\t\tif (next.node.children && next.node.children.length) {\n\t\t\t\tchildren = renderedToWrapper(next.node.children, next, null);\n\t\t\t\t_idToChildrenWrappers.set(next.id, children);\n\t\t\t}\n\t\t}\n\t\tconst dom: ApplicationInstruction | undefined =\n\t\t\tisVirtual || isBody\n\t\t\t\t? undefined\n\t\t\t\t: {\n\t\t\t\t\t\tnext: next!,\n\t\t\t\t\t\tparentDomNode: parentDomNode,\n\t\t\t\t\t\ttype: 'create'\n\t\t\t\t  };\n\t\tif (children) {\n\t\t\treturn {\n\t\t\t\titem: {\n\t\t\t\t\tcurrent: [],\n\t\t\t\t\tnext: children,\n\t\t\t\t\tmeta: { mergeNodes }\n\t\t\t\t},\n\t\t\t\tdom,\n\t\t\t\twidget: isVirtual ? { type: 'attach', id: (next as any).id, attached: false } : undefined\n\t\t\t};\n\t\t}\n\t\treturn { dom };\n\t}\n\n\tfunction _updateDom({ current, next }: UpdateDomInstruction): ProcessResult {\n\t\tnext.domNode = current.domNode;\n\t\tnext.namespace = current.namespace;\n\t\tnext.id = current.id;\n\t\tnext.childDomWrapperId = current.childDomWrapperId;\n\t\tlet children: DNodeWrapper[] | undefined;\n\t\tlet currentChildren = _idToChildrenWrappers.get(next.id);\n\t\tif (next.node.text != null && next.node.text !== current.node.text) {\n\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t} else if (next.node.children) {\n\t\t\tchildren = renderedToWrapper(next.node.children, next, current);\n\t\t\t_idToChildrenWrappers.set(next.id, children);\n\t\t}\n\t\t_wrapperSiblingMap.delete(current);\n\t\t_idToWrapperMap.set(next.id, next);\n\t\treturn {\n\t\t\titem: {\n\t\t\t\tcurrent: currentChildren,\n\t\t\t\tnext: children,\n\t\t\t\tmeta: {}\n\t\t\t},\n\t\t\tdom: { type: 'update', next, current }\n\t\t};\n\t}\n\n\tfunction _removeDom({ current }: RemoveDomInstruction): ProcessResult {\n\t\tconst isVirtual = isVirtualWrapper(current);\n\t\tconst isBody = isBodyWrapper(current);\n\t\tconst children = _idToChildrenWrappers.get(current.id);\n\t\t_idToChildrenWrappers.delete(current.id);\n\t\t_idToWrapperMap.delete(current.id);\n\t\t_wrapperSiblingMap.delete(current);\n\t\tif (current.node.properties.key) {\n\t\t\tconst widgetMeta = widgetMetaMap.get(current.owningId);\n\t\t\tconst parentWrapper = getWNodeWrapper(current.owningId);\n\t\t\tif (widgetMeta) {\n\t\t\t\twidgetMeta.nodeMap && widgetMeta.nodeMap.delete(current.node.properties.key);\n\t\t\t} else if (parentWrapper && parentWrapper.instance) {\n\t\t\t\tconst instanceData = widgetInstanceMap.get(parentWrapper.instance);\n\t\t\t\tinstanceData && instanceData.nodeHandler.remove(current.node.properties.key);\n\t\t\t}\n\t\t}\n\t\tif (current.hasAnimations || isVirtual || isBody) {\n\t\t\treturn {\n\t\t\t\titem: { current: children, meta: {} },\n\t\t\t\tdom: isVirtual || isBody ? undefined : { type: 'delete', current }\n\t\t\t};\n\t\t}\n\n\t\tif (children) {\n\t\t\t_deferredRenderCallbacks.push(() => {\n\t\t\t\tlet wrappers = children || [];\n\t\t\t\tlet wrapper: DNodeWrapper | undefined;\n\t\t\t\tlet bodyIds = [];\n\t\t\t\twhile ((wrapper = wrappers.pop())) {\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\twrapper = getWNodeWrapper(wrapper.id) || wrapper;\n\t\t\t\t\t\tif (wrapper.instance) {\n\t\t\t\t\t\t\tconst instanceData = widgetInstanceMap.get(wrapper.instance);\n\t\t\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t\t\t\twrapper.instance = undefined;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst meta = widgetMetaMap.get(wrapper.id);\n\t\t\t\t\t\t\tif (meta) {\n\t\t\t\t\t\t\t\tmeta.registryHandler && meta.registryHandler.destroy();\n\t\t\t\t\t\t\t\tdestroyHandles(meta);\n\t\t\t\t\t\t\t\twidgetMetaMap.delete(wrapper.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet wrapperChildren = _idToChildrenWrappers.get(wrapper.id);\n\t\t\t\t\tif (wrapperChildren) {\n\t\t\t\t\t\twrappers.push(...wrapperChildren);\n\t\t\t\t\t}\n\t\t\t\t\tif (isBodyWrapper(wrapper)) {\n\t\t\t\t\t\tbodyIds.push(wrapper.id);\n\t\t\t\t\t} else if (bodyIds.indexOf(wrapper.parentId) !== -1) {\n\t\t\t\t\t\tif (isWNodeWrapper(wrapper) || isVirtualWrapper(wrapper)) {\n\t\t\t\t\t\t\tbodyIds.push(wrapper.id);\n\t\t\t\t\t\t} else if (wrapper.domNode && wrapper.domNode.parentNode) {\n\t\t\t\t\t\t\twrapper.domNode.parentNode.removeChild(wrapper.domNode);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t_idToChildrenWrappers.delete(wrapper.id);\n\t\t\t\t\t_idToWrapperMap.delete(wrapper.id);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\tdom: { type: 'delete', current }\n\t\t};\n\t}\n\n\treturn {\n\t\tmount,\n\t\tinvalidate\n\t};\n}\n\nexport default renderer;\n","import global from '../../shim/global';\nimport { History, HistoryOptions, OnChangeFunction } from './../interfaces';\n\nexport class HashHistory implements History {\n\tprivate _onChangeFunction: OnChangeFunction;\n\tprivate _current: string;\n\tprivate _window: Window;\n\n\tconstructor({ window = global.window, onChange }: HistoryOptions) {\n\t\tthis._onChangeFunction = onChange;\n\t\tthis._window = window;\n\t\tthis._window.addEventListener('hashchange', this._onChange, false);\n\t\tthis._current = this.normalizePath(this._window.location.hash);\n\t\tthis._onChangeFunction(this._current);\n\t}\n\n\tpublic normalizePath(path: string): string {\n\t\treturn path.replace('#', '');\n\t}\n\n\tpublic prefix(path: string) {\n\t\tif (path[0] !== '#') {\n\t\t\treturn `#${path}`;\n\t\t}\n\t\treturn path;\n\t}\n\n\tpublic set(path: string) {\n\t\tthis._window.location.hash = this.prefix(path);\n\t\tthis._onChange();\n\t}\n\n\tpublic get current(): string {\n\t\treturn this._current;\n\t}\n\n\tpublic destroy() {\n\t\tthis._window.removeEventListener('hashchange', this._onChange);\n\t}\n\n\tprivate _onChange = () => {\n\t\tconst path = this.normalizePath(this._window.location.hash);\n\t\tif (path !== this._current) {\n\t\t\tthis._current = path;\n\t\t\tthis._onChangeFunction(this._current);\n\t\t}\n\t};\n}\n\nexport default HashHistory;\n","import Evented from '../core/Evented';\nimport { RouteConfig, History, OutletContext, Params, RouterInterface, Route, RouterOptions } from './interfaces';\nimport { HashHistory } from './history/HashHistory';\nimport { EventObject } from '../core/Evented';\n\nconst PARAM = '__PARAM__';\n\nconst paramRegExp = new RegExp(/^{.+}$/);\n\ninterface RouteWrapper {\n\troute: Route;\n\tsegments: string[];\n\tparent?: RouteWrapper;\n\ttype?: string;\n\tparams: Params;\n}\n\nexport interface NavEvent extends EventObject<string> {\n\toutlet?: string;\n\tcontext?: OutletContext;\n}\n\nexport interface OutletEvent extends EventObject<string> {\n\toutlet: OutletContext;\n\taction: 'enter' | 'exit';\n}\n\nconst ROUTE_SEGMENT_SCORE = 7;\nconst DYNAMIC_SEGMENT_PENALTY = 2;\n\nfunction matchingParams({ params: previousParams }: OutletContext, { params }: OutletContext) {\n\tconst matching = Object.keys(previousParams).every((key) => previousParams[key] === params[key]);\n\tif (!matching) {\n\t\treturn false;\n\t}\n\treturn Object.keys(params).every((key) => previousParams[key] === params[key]);\n}\n\nexport class Router extends Evented<{ nav: NavEvent; outlet: OutletEvent }> implements RouterInterface {\n\tprivate _routes: Route[] = [];\n\tprivate _outletMap: { [index: string]: Route } = Object.create(null);\n\tprivate _matchedOutlets: { [index: string]: OutletContext } = Object.create(null);\n\tprivate _currentParams: Params = {};\n\tprivate _currentQueryParams: Params = {};\n\tprivate _defaultOutlet: string | undefined;\n\tprivate _history!: History;\n\tprivate _options: RouterOptions;\n\n\tconstructor(config: RouteConfig[], options: RouterOptions = {}) {\n\t\tsuper();\n\t\tthis._options = options;\n\t\tthis._register(config);\n\t\tconst autostart = options.autostart === undefined ? true : options.autostart;\n\t\tif (autostart) {\n\t\t\tthis.start();\n\t\t}\n\t}\n\n\t/**\n\t * Sets the path against the registered history manager\n\t *\n\t * @param path The path to set on the history manager\n\t */\n\tpublic setPath(path: string): void {\n\t\tthis._history.set(path);\n\t}\n\n\tpublic start() {\n\t\tconst { HistoryManager = HashHistory, base, window } = this._options;\n\t\tthis._history = new HistoryManager({ onChange: this._onChange, base, window });\n\t\tif (this._matchedOutlets.errorOutlet && this._defaultOutlet) {\n\t\t\tconst path = this.link(this._defaultOutlet);\n\t\t\tif (path) {\n\t\t\t\tthis.setPath(path);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Generate a link for a given outlet identifier and optional params.\n\t *\n\t * @param outlet The outlet to generate a link for\n\t * @param params Optional Params for the generated link\n\t */\n\tpublic link(outlet: string, params: Params = {}): string | undefined {\n\t\tconst { _outletMap, _currentParams, _currentQueryParams } = this;\n\t\tlet route = _outletMap[outlet];\n\t\tif (route === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet linkPath: string | undefined = route.fullPath;\n\t\tif (route.fullQueryParams.length > 0) {\n\t\t\tlet queryString = route.fullQueryParams.reduce((queryParamString, param, index) => {\n\t\t\t\tif (index > 0) {\n\t\t\t\t\treturn `${queryParamString}&${param}={${param}}`;\n\t\t\t\t}\n\t\t\t\treturn `?${param}={${param}}`;\n\t\t\t}, '');\n\t\t\tlinkPath = `${linkPath}${queryString}`;\n\t\t}\n\t\tparams = { ...route.defaultParams, ..._currentQueryParams, ..._currentParams, ...params };\n\n\t\tif (Object.keys(params).length === 0 && route.fullParams.length > 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst fullParams = [...route.fullParams, ...route.fullQueryParams];\n\t\tfor (let i = 0; i < fullParams.length; i++) {\n\t\t\tconst param = fullParams[i];\n\t\t\tif (params[param]) {\n\t\t\t\tlinkPath = linkPath.replace(`{${param}}`, params[param]);\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t\treturn this._history.prefix(linkPath);\n\t}\n\n\t/**\n\t * Returns the outlet context for the outlet identifier if one has been matched\n\t *\n\t * @param outletIdentifier The outlet identifer\n\t */\n\tpublic getOutlet(outletIdentifier: string): OutletContext | undefined {\n\t\treturn this._matchedOutlets[outletIdentifier];\n\t}\n\n\t/**\n\t * Returns all the params for the current matched outlets\n\t */\n\tpublic get currentParams() {\n\t\treturn this._currentParams;\n\t}\n\n\t/**\n\t * Strips the leading slash on a path if one exists\n\t *\n\t * @param path The path to strip a leading slash\n\t */\n\tprivate _stripLeadingSlash(path: string): string {\n\t\tif (path[0] === '/') {\n\t\t\treturn path.slice(1);\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t * Registers the routing configuration\n\t *\n\t * @param config The configuration\n\t * @param routes The routes\n\t * @param parentRoute The parent route\n\t */\n\tprivate _register(config: RouteConfig[], routes?: Route[], parentRoute?: Route): void {\n\t\troutes = routes ? routes : this._routes;\n\t\tfor (let i = 0; i < config.length; i++) {\n\t\t\tlet { path, outlet, children, defaultRoute = false, defaultParams = {} } = config[i];\n\t\t\tlet [parsedPath, queryParamString] = path.split('?');\n\t\t\tlet queryParams: string[] = [];\n\t\t\tparsedPath = this._stripLeadingSlash(parsedPath);\n\n\t\t\tconst segments: string[] = parsedPath.split('/');\n\t\t\tconst route: Route = {\n\t\t\t\tparams: [],\n\t\t\t\toutlet,\n\t\t\t\tpath: parsedPath,\n\t\t\t\tsegments,\n\t\t\t\tdefaultParams: parentRoute ? { ...parentRoute.defaultParams, ...defaultParams } : defaultParams,\n\t\t\t\tchildren: [],\n\t\t\t\tfullPath: parentRoute ? `${parentRoute.fullPath}/${parsedPath}` : parsedPath,\n\t\t\t\tfullParams: [],\n\t\t\t\tfullQueryParams: [],\n\t\t\t\tscore: parentRoute ? parentRoute.score : 0\n\t\t\t};\n\t\t\tif (defaultRoute) {\n\t\t\t\tthis._defaultOutlet = outlet;\n\t\t\t}\n\t\t\tfor (let i = 0; i < segments.length; i++) {\n\t\t\t\tconst segment = segments[i];\n\t\t\t\troute.score += ROUTE_SEGMENT_SCORE;\n\t\t\t\tif (paramRegExp.test(segment)) {\n\t\t\t\t\troute.score -= DYNAMIC_SEGMENT_PENALTY;\n\t\t\t\t\troute.params.push(segment.replace('{', '').replace('}', ''));\n\t\t\t\t\tsegments[i] = PARAM;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (queryParamString) {\n\t\t\t\tqueryParams = queryParamString.split('&').map((queryParam) => {\n\t\t\t\t\treturn queryParam.replace('{', '').replace('}', '');\n\t\t\t\t});\n\t\t\t}\n\t\t\troute.fullQueryParams = parentRoute ? [...parentRoute.fullQueryParams, ...queryParams] : queryParams;\n\n\t\t\troute.fullParams = parentRoute ? [...parentRoute.fullParams, ...route.params] : route.params;\n\n\t\t\tif (children && children.length > 0) {\n\t\t\t\tthis._register(children, route.children, route);\n\t\t\t}\n\t\t\tthis._outletMap[outlet] = route;\n\t\t\troutes.push(route);\n\t\t}\n\t}\n\n\t/**\n\t * Returns an object of query params\n\t *\n\t * @param queryParamString The string of query params, e.g `paramOne=one&paramTwo=two`\n\t */\n\tprivate _getQueryParams(queryParamString?: string): { [index: string]: string } {\n\t\tconst queryParams: { [index: string]: string } = {};\n\t\tif (queryParamString) {\n\t\t\tconst queryParameters = queryParamString.split('&');\n\t\t\tfor (let i = 0; i < queryParameters.length; i++) {\n\t\t\t\tconst [key, value] = queryParameters[i].split('=');\n\t\t\t\tqueryParams[key] = value;\n\t\t\t}\n\t\t}\n\t\treturn queryParams;\n\t}\n\n\t/**\n\t * Called on change of the route by the the registered history manager. Matches the path against\n\t * the registered outlets.\n\t *\n\t * @param requestedPath The path of the requested route\n\t */\n\tprivate _onChange = (requestedPath: string): void => {\n\t\trequestedPath = this._stripLeadingSlash(requestedPath);\n\t\tconst previousMatchedOutlets = this._matchedOutlets;\n\t\tthis._matchedOutlets = Object.create(null);\n\t\tconst [path, queryParamString] = requestedPath.split('?');\n\t\tthis._currentQueryParams = this._getQueryParams(queryParamString);\n\t\tconst segments = path.split('/');\n\t\tlet routeConfigs: RouteWrapper[] = this._routes.map((route) => ({\n\t\t\troute,\n\t\t\tsegments: [...segments],\n\t\t\tparent: undefined,\n\t\t\tparams: {}\n\t\t}));\n\t\tlet routeConfig: RouteWrapper | undefined;\n\t\tlet matchedRoutes: RouteWrapper[] = [];\n\t\twhile ((routeConfig = routeConfigs.pop())) {\n\t\t\tconst { route, parent, segments, params } = routeConfig;\n\t\t\tlet segmentIndex = 0;\n\t\t\tlet type = 'index';\n\t\t\tlet paramIndex = 0;\n\t\t\tlet routeMatch = true;\n\t\t\tif (segments.length < route.segments.length) {\n\t\t\t\trouteMatch = false;\n\t\t\t} else {\n\t\t\t\twhile (segments.length > 0) {\n\t\t\t\t\tif (route.segments[segmentIndex] === undefined) {\n\t\t\t\t\t\ttype = 'partial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst segment = segments.shift()!;\n\t\t\t\t\tif (route.segments[segmentIndex] === PARAM) {\n\t\t\t\t\t\tparams[route.params[paramIndex++]] = segment;\n\t\t\t\t\t\tthis._currentParams = { ...this._currentParams, ...params };\n\t\t\t\t\t} else if (route.segments[segmentIndex] !== segment) {\n\t\t\t\t\t\trouteMatch = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tsegmentIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (routeMatch) {\n\t\t\t\trouteConfig.type = type;\n\t\t\t\tmatchedRoutes.push({ route, parent, type, params, segments: [] });\n\t\t\t\tif (segments.length) {\n\t\t\t\t\trouteConfigs = [\n\t\t\t\t\t\t...routeConfigs,\n\t\t\t\t\t\t...route.children.map((childRoute) => ({\n\t\t\t\t\t\t\troute: childRoute,\n\t\t\t\t\t\t\tsegments: [...segments],\n\t\t\t\t\t\t\tparent: routeConfig,\n\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\tparams: { ...params }\n\t\t\t\t\t\t}))\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet matchedOutletName: string | undefined = undefined;\n\t\tlet matchedRoute: any = matchedRoutes.reduce((match: any, matchedRoute: any) => {\n\t\t\tif (!match) {\n\t\t\t\treturn matchedRoute;\n\t\t\t}\n\t\t\tif (match.route.score > matchedRoute.route.score) {\n\t\t\t\treturn match;\n\t\t\t}\n\t\t\treturn matchedRoute;\n\t\t}, undefined);\n\n\t\tif (matchedRoute) {\n\t\t\tif (matchedRoute.type === 'partial') {\n\t\t\t\tmatchedRoute.type = 'error';\n\t\t\t}\n\t\t\tmatchedOutletName = matchedRoute.route.outlet;\n\t\t\twhile (matchedRoute) {\n\t\t\t\tlet { type, params, parent, route } = matchedRoute;\n\t\t\t\tconst matchedOutlet = {\n\t\t\t\t\tid: route.outlet,\n\t\t\t\t\tqueryParams: this._currentQueryParams,\n\t\t\t\t\tparams,\n\t\t\t\t\ttype,\n\t\t\t\t\tisError: () => type === 'error',\n\t\t\t\t\tisExact: () => type === 'index'\n\t\t\t\t};\n\t\t\t\tconst previousMatchedOutlet = previousMatchedOutlets[route.outlet];\n\t\t\t\tthis._matchedOutlets[route.outlet] = matchedOutlet;\n\t\t\t\tif (!previousMatchedOutlet || !matchingParams(previousMatchedOutlet, matchedOutlet)) {\n\t\t\t\t\tthis.emit({ type: 'outlet', outlet: matchedOutlet, action: 'enter' });\n\t\t\t\t}\n\t\t\t\tmatchedRoute = parent;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._matchedOutlets.errorOutlet = {\n\t\t\t\tid: 'errorOutlet',\n\t\t\t\tqueryParams: {},\n\t\t\t\tparams: {},\n\t\t\t\tisError: () => true,\n\t\t\t\tisExact: () => false,\n\t\t\t\ttype: 'error'\n\t\t\t};\n\t\t}\n\n\t\tconst previousMatchedOutletKeys = Object.keys(previousMatchedOutlets);\n\t\tfor (let i = 0; i < previousMatchedOutletKeys.length; i++) {\n\t\t\tconst key = previousMatchedOutletKeys[i];\n\t\t\tconst matchedOutlet = this._matchedOutlets[key];\n\t\t\tif (!matchedOutlet || !matchingParams(previousMatchedOutlets[key], matchedOutlet)) {\n\t\t\t\tthis.emit({ type: 'outlet', outlet: previousMatchedOutlets[key], action: 'exit' });\n\t\t\t}\n\t\t}\n\t\tthis.emit({\n\t\t\ttype: 'nav',\n\t\t\toutlet: matchedOutletName,\n\t\t\tcontext: matchedOutletName ? this._matchedOutlets[matchedOutletName] : undefined\n\t\t});\n\t};\n}\n\nexport default Router;\n","import global from '../../shim/global';\nimport { History as HistoryInterface, HistoryOptions, OnChangeFunction } from './../interfaces';\nimport has from '../../core/has';\n\nconst trailingSlash = new RegExp(/\\/$/);\nconst leadingSlash = new RegExp(/^\\//);\n\nfunction stripBase(base: string | undefined, path: string): string {\n\tif (!base) {\n\t\treturn path;\n\t}\n\tif (path.indexOf(base) === 0) {\n\t\treturn path.slice(base.length);\n\t}\n\treturn path;\n}\n\nfunction sanatizePath(path: string) {\n\tif (path[0] === '#') {\n\t\tpath = path.slice(1);\n\t}\n\tif (path[0] === '/') {\n\t\tpath = path.slice(1);\n\t}\n\treturn path;\n}\n\nexport class StateHistory implements HistoryInterface {\n\tprivate _current!: string;\n\tprivate _onChangeFunction: OnChangeFunction;\n\tprivate _window: Window;\n\tprivate _base: string | undefined;\n\n\tconstructor({ onChange, window = global.window, base }: HistoryOptions) {\n\t\tif (has('dojo-debug') && base) {\n\t\t\tconsole.warn(`Base is no longer supported via history options, please set 'base' in the '.dojorc'`);\n\t\t}\n\t\tthis._base = has('app-base') ? `${has('app-base')}` : '/';\n\t\tif (/(#|\\?)/.test(this._base)) {\n\t\t\tthrow new TypeError(\"base must not contain '#' or '?'\");\n\t\t}\n\t\tthis._onChangeFunction = onChange;\n\t\tthis._window = window;\n\t\tif (!trailingSlash.test(this._base)) {\n\t\t\tthis._base = `${this._base}/`;\n\t\t}\n\t\tif (!leadingSlash.test(this._base)) {\n\t\t\tthis._base = `/${this._base}`;\n\t\t}\n\t\tthis._window.addEventListener('popstate', this._onChange, false);\n\t\tthis._onChange();\n\t}\n\n\tpublic prefix(path: string) {\n\t\treturn sanatizePath(path);\n\t}\n\n\tprivate _setBasePath(path: string) {\n\t\treturn `${this._base}${sanatizePath(path)}`;\n\t}\n\n\tpublic set(path: string) {\n\t\tconst value = stripBase(this._base, path);\n\t\tif (this._current === value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._window.history.pushState({}, '', this._setBasePath(value));\n\t\tthis._onChange();\n\t}\n\n\tpublic get current(): string {\n\t\treturn this._current;\n\t}\n\n\tprivate _onChange = () => {\n\t\tconst pathName = this._window.location.pathname.replace(/\\/$/, '');\n\t\tthis._current = stripBase(this._base, pathName + this._window.location.search);\n\n\t\tthis._onChangeFunction(this._current);\n\t};\n}\n\nexport default StateHistory;\n","import { SiteMeta } from './interfaces';\nimport { RouteConfig } from '@dojo/framework/routing/interfaces';\n\nexport const meta: SiteMeta = {\n\ttitle: 'learn dojo',\n\tauthor: 'odoenet',\n\tdescription: 'byte by byte',\n\tfooterLinks: [\n\t\t{\n\t\t\thref: '/atom.xml',\n\t\t\ttext: 'rss feed',\n\t\t\tlogo: '/assets/images/logos/rss-logo-32px.png'\n\t\t},\n\t\t{\n\t\t\thref: 'https://github.com/odoe/learn-dojo',\n\t\t\ttext: 'github',\n\t\t\tlogo: '/assets/images/logos/GitHub-Mark-32px.png'\n\t\t},\n\t\t{\n\t\t\thref: 'https://www.youtube.com/channel/UCTMyJW_31j2hyZGKJpddgaQ',\n\t\t\ttext: 'youtube',\n\t\t\tlogo: '/assets/images/logos/yt_logo_mono_light_32px.png'\n\t\t},\n\t\t{\n\t\t\thref: 'https://dojo.io/',\n\t\t\ttext: 'powered by @dojo'\n\t\t}\n\t]\n};\n\nexport const routes: RouteConfig[] = [\n\t{\n\t\tpath: '/{path}',\n\t\toutlet: 'blog',\n\t\tdefaultRoute: true\n\t}\n];\n\n// -------------------------------------\n// Plugins for static site generation\n// -------------------------------------\n\n// remark plugins with options\nexport const remarkPlugins = [\n\t{\n\t\tresolve: 'remark-external-links',\n\t\toptions: { target: '_blank', rel: ['nofollow'] }\n\t}\n];\n\n// rehype plugins with options\nexport const rehypePlugins = [\n\t{\n\t\tresolve: 'rehype-picture',\n\t\toptions: {\n\t\t\tjpg: {\n\t\t\t\twebp: 'image/webp'\n\t\t\t},\n\t\t\tpng: {\n\t\t\t\twebp: 'image/webp'\n\t\t\t}\n\t\t},\n\t},\n\t'@mapbox/rehype-prism',\n\t'rehype-slug',\n];\n","import { create, getRegistry, invalidator, destroy } from '../vdom';\nimport { RegistryLabel } from '../interfaces';\nimport { Handle } from '../Destroyable';\n\nconst injectorFactory = create({ getRegistry, invalidator, destroy });\n\nexport const injector = injectorFactory(({ middleware: { getRegistry, invalidator, destroy } }) => {\n\tconst handles: Handle[] = [];\n\tdestroy(() => {\n\t\tlet handle: Handle | undefined;\n\t\twhile ((handle = handles.pop())) {\n\t\t\thandle.destroy();\n\t\t}\n\t});\n\tconst registry = getRegistry();\n\treturn {\n\t\tsubscribe(label: RegistryLabel, callback: Function = invalidator) {\n\t\t\tif (registry) {\n\t\t\t\tconst item = registry.getInjector(label);\n\t\t\t\tif (item) {\n\t\t\t\t\tconst handle = item.invalidator.on('invalidate', () => {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t});\n\t\t\t\t\thandles.push(handle);\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tconst index = handles.indexOf(handle);\n\t\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\t\thandles.splice(index, 1);\n\t\t\t\t\t\t\thandle.destroy();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tget<T>(label: RegistryLabel): T | null {\n\t\t\tif (registry) {\n\t\t\t\tconst item = registry.getInjector<T>(label);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item.injector();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n});\n\nexport default injector;\n","import { create, destroy } from '../vdom';\nimport Map from '../../shim/Map';\n\nconst factory = create({ destroy });\n\nexport const cache = factory(({ middleware: { destroy } }) => {\n\tconst cacheMap = new Map<string, any>();\n\tdestroy(() => {\n\t\tcacheMap.clear();\n\t});\n\treturn {\n\t\tget<T = any>(key: any): T | undefined {\n\t\t\treturn cacheMap.get(key);\n\t\t},\n\t\tset<T = any>(key: any, value: T): void {\n\t\t\tcacheMap.set(key, value);\n\t\t},\n\t\tclear(): void {\n\t\t\tcacheMap.clear();\n\t\t}\n\t};\n});\n\nexport default cache;\n","import { create, diffProperty, invalidator } from '../core/vdom';\nimport injector from '../core/middleware/injector';\nimport cache from '../core/middleware/cache';\nimport { DNode } from '../core/interfaces';\nimport { MatchDetails } from './interfaces';\nimport Router from './Router';\n\nexport interface OutletProperties {\n\trenderer: (matchDetails: MatchDetails) => DNode | DNode[];\n\tid: string;\n\trouterKey?: string;\n}\n\nconst factory = create({ cache, injector, diffProperty, invalidator }).properties<OutletProperties>();\n\nexport const Outlet = factory(function Outlet({\n\tmiddleware: { cache, injector, diffProperty, invalidator },\n\tproperties\n}) {\n\tconst { renderer, id, routerKey = 'router' } = properties();\n\tconst currentHandle = cache.get<Function>('handle');\n\tif (!currentHandle) {\n\t\tconst handle = injector.subscribe(routerKey);\n\t\tif (handle) {\n\t\t\tcache.set('handle', handle);\n\t\t}\n\t}\n\tdiffProperty('routerKey', (current: OutletProperties, next: OutletProperties) => {\n\t\tconst { routerKey: currentRouterKey = 'router' } = current;\n\t\tconst { routerKey = 'router' } = next;\n\t\tif (routerKey !== currentRouterKey) {\n\t\t\tconst currentHandle = cache.get<Function>('handle');\n\t\t\tif (currentHandle) {\n\t\t\t\tcurrentHandle();\n\t\t\t}\n\t\t\tconst handle = injector.subscribe(routerKey);\n\t\t\tif (handle) {\n\t\t\t\tcache.set('handle', handle);\n\t\t\t}\n\t\t}\n\t\tinvalidator();\n\t});\n\tconst router = injector.get<Router>(routerKey);\n\n\tif (router) {\n\t\tconst outletContext = router.getOutlet(id);\n\t\tif (outletContext) {\n\t\t\tconst { queryParams, params, type, isError, isExact } = outletContext;\n\t\t\tconst result = renderer({ queryParams, params, type, isError, isExact, router });\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n});\n\nexport default Outlet;\n","/* tslint:disable:interface-name */\nimport { create, invalidator } from '../vdom';\nimport cache from './cache';\n\nconst factory = create({ cache, invalidator });\n\ninterface CacheWrapper {\n\tstatus: 'pending' | 'resolved';\n\tvalue: any;\n}\n\nexport interface ICacheResult<S = void> {\n\tgetOrSet: {\n\t\t<T extends void extends S ? any : keyof S>(\n\t\t\tkey: void extends S ? any : T,\n\t\t\tvalue: void extends S ? () => Promise<T> : () => Promise<S[T]>\n\t\t): void extends S ? undefined | T : undefined | S[T];\n\t\t<T extends void extends S ? any : keyof S>(\n\t\t\tkey: void extends S ? any : T,\n\t\t\tvalue: void extends S ? () => T : () => S[T]\n\t\t): void extends S ? T : S[T];\n\t\t<T extends void extends S ? any : keyof S>(\n\t\t\tkey: void extends S ? any : T,\n\t\t\tvalue: void extends S ? T : S[T]\n\t\t): void extends S ? T : S[T];\n\t};\n\tget<T extends void extends S ? any : keyof S>(\n\t\tkey: void extends S ? any : T\n\t): void extends S ? T | undefined : S[T] | undefined;\n\tset<T extends void extends S ? any : keyof S>(\n\t\tkey: void extends S ? any : T,\n\t\tvalue: void extends S ? T : S[T]\n\t): void;\n\tclear(): void;\n}\n\nexport function createICacheMiddleware<S = void>() {\n\tconst icache = factory(\n\t\t({ middleware: { invalidator, cache } }): ICacheResult<S> => {\n\t\t\treturn {\n\t\t\t\tgetOrSet(key: any, value: any): any | undefined {\n\t\t\t\t\tlet cachedValue = cache.get<CacheWrapper>(key);\n\t\t\t\t\tif (!cachedValue) {\n\t\t\t\t\t\tthis.set(key, value);\n\t\t\t\t\t}\n\t\t\t\t\tcachedValue = cache.get<CacheWrapper>(key);\n\t\t\t\t\tif (!cachedValue || cachedValue.status === 'pending') {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t\treturn cachedValue.value;\n\t\t\t\t},\n\t\t\t\tget(key: any): any {\n\t\t\t\t\tconst cachedValue = cache.get<CacheWrapper>(key);\n\t\t\t\t\tif (!cachedValue || cachedValue.status === 'pending') {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t\treturn cachedValue.value;\n\t\t\t\t},\n\t\t\t\tset(key: any, value: any): void {\n\t\t\t\t\tif (typeof value === 'function') {\n\t\t\t\t\t\tvalue = value();\n\t\t\t\t\t\tif (value && typeof value.then === 'function') {\n\t\t\t\t\t\t\tcache.set(key, {\n\t\t\t\t\t\t\t\tstatus: 'pending',\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tvalue.then((result: any) => {\n\t\t\t\t\t\t\t\tconst cachedValue = cache.get<CacheWrapper>(key);\n\t\t\t\t\t\t\t\tif (cachedValue && cachedValue.value === value) {\n\t\t\t\t\t\t\t\t\tcache.set(key, {\n\t\t\t\t\t\t\t\t\t\tstatus: 'resolved',\n\t\t\t\t\t\t\t\t\t\tvalue: result\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tinvalidator();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcache.set(key, {\n\t\t\t\t\t\tstatus: 'resolved',\n\t\t\t\t\t\tvalue\n\t\t\t\t\t});\n\t\t\t\t\tinvalidator();\n\t\t\t\t},\n\t\t\t\tclear(): void {\n\t\t\t\t\tcache.clear();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t);\n\treturn icache;\n}\n\nexport const icache = createICacheMiddleware();\n\nexport default icache;\n","import { create, defer } from '../vdom';\nimport cache from './cache';\nimport icache from './icache';\n\nconst blockFactory = create({ defer, cache, icache });\n\nexport const block = blockFactory(({ middleware: { cache, icache, defer } }) => {\n\tlet id = 1;\n\treturn <T extends (...args: any[]) => any>(module: T) => {\n\t\treturn (...args: Parameters<T>): (ReturnType<T> extends Promise<infer U> ? U : ReturnType<T>) | null => {\n\t\t\tconst argsString = JSON.stringify(args);\n\t\t\tconst moduleId = cache.get(module) || id++;\n\t\t\tcache.set(module, moduleId);\n\t\t\tconst cachedValue = icache.getOrSet(`${moduleId}-${argsString}`, async () => {\n\t\t\t\tconst run = module(...args);\n\t\t\t\tdefer.pause();\n\t\t\t\tconst result = await run;\n\t\t\t\tdefer.resume();\n\t\t\t\treturn result;\n\t\t\t});\n\t\t\treturn cachedValue || null;\n\t\t};\n\t};\n});\n\nexport default block;\n","import { create, v } from '../core/vdom';\nimport injector from '../core/middleware/injector';\nimport { VNodeProperties } from '../core/interfaces';\nimport { Params } from './interfaces';\nimport Router from './Router';\n\nexport interface LinkProperties extends VNodeProperties {\n\tkey?: string;\n\trouterKey?: string;\n\tisOutlet?: boolean;\n\tparams?: Params;\n\tonClick?: (event: MouseEvent) => void;\n\tto: string;\n}\n\nconst factory = create({ injector }).properties<LinkProperties>();\n\nexport const Link = factory(function Link({ middleware: { injector }, properties, children }) {\n\tlet { routerKey = 'router', to, isOutlet = true, target, params = {}, onClick, ...props } = properties();\n\tconst router = injector.get<Router>(routerKey);\n\tlet href: string | undefined = to;\n\n\tlet linkProps: VNodeProperties;\n\tif (router) {\n\t\tif (isOutlet) {\n\t\t\thref = router.link(href, params);\n\t\t}\n\t\tconst onclick = (event: MouseEvent) => {\n\t\t\tonClick && onClick(event);\n\n\t\t\tif (!event.defaultPrevented && event.button === 0 && !event.metaKey && !event.ctrlKey && !target) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\thref !== undefined && router.setPath(href);\n\t\t\t}\n\t\t};\n\t\tlinkProps = { ...props, onclick, href };\n\t} else {\n\t\tlinkProps = { ...props, href };\n\t}\n\treturn v('a', linkProps, children());\n});\n\nexport default Link;\n","var modulePath = 'src/blocks/compile-blog-post.block';\nimport has from '@dojo/framework/core/has';\nimport global from '@dojo/framework/shim/global';\n\nexport default function () {\n\tvar args = Array.prototype.slice.call(arguments);\n\t/** @preserve {{ REPLACE }} **/\n\tif (has('build-time-render') && global.__dojoBuildBridge) {\n\t\treturn global.__dojoBuildBridge(modulePath, args);\n\t}\n\telse {\n\t\tvar stringifiedArgs = JSON.stringify(args);\n\t\tif (global.__dojoBuildBridgeCache &&\n\t\t\tglobal.__dojoBuildBridgeCache[modulePath] &&\n\t\t\tglobal.__dojoBuildBridgeCache[modulePath][stringifiedArgs]\n\t\t) {\n\t\t\treturn global.__dojoBuildBridgeCache[modulePath][stringifiedArgs]();\n\t\t}\n\t\treturn undefined;\n\t}\n}\n","import { tsx, create } from '@dojo/framework/core/vdom';\n// import theme from '@dojo/framework/core/middleware/theme';\n\nimport * as css from './Article.m.css';\n\nconst factory = create();\n\nexport default factory(({ children }) => {\n  return <article classes={[ css.root ]}>{children()}</article>\n});\n","const options = { year: 'numeric', month: 'long', day: 'numeric' };\nconst formatter = new Intl.DateTimeFormat('en-US', options);\n\nexport function dateFormatter(date: Date) {\n\treturn formatter.format(date);\n}\n","import { tsx, create } from '@dojo/framework/core/vdom';\nimport block from '@dojo/framework/core/middleware/block';\n\nimport Link from '@dojo/framework/routing/Link';\n\nimport compileBlogPost from '../../blocks/compile-blog-post.block';\n\nimport Article from '../../widgets/article/Article';\n\nimport { dateFormatter } from '../../utils/formatter';\n\nexport interface PostProperties {\n\tpath: string;\n}\n\nconst factory = create({ block }).properties<PostProperties>();\n\nexport default factory(({ middleware: { block }, properties }) => {\n  let { path }  = properties();\n  if (!path.includes('.md')) {\n    path = `${path}.md`;\n  }\n  const post: any = block(compileBlogPost)({\n    path\n  });\n\n  if (post) {\n    const date = dateFormatter(new Date(post.meta.date));\n    return (\n      <section>\n        <picture>\n          <source type=\"image/webp\" srcset={post.meta.cover_image.replace(/\\.(jpg|png)/, '.webp')}/>\n          <source type=\"image/jpeg\" srcset={post.meta.cover_image}/>\n          <img src={post.meta.cover_image} key={`cover-image-${post.meta.title}`} alt={post.meta.title} loading=\"lazy\" />\n        </picture>\n        <Article key={post.meta.title}>\n          <Link\n            to=\"blog\"\n            aria-label={post.meta.title}\n            params={{\n              path: path.replace('posts/', '').replace('.md', '')\n            }}\n          >\n            <h2>{post.meta.title}</h2>\n          </Link>\n          <p>\n            {`${post.meta.author} | ${date}`}\n          </p>\n          {post.content}\n        </Article>\n      </section>\n    );\n  }\n});\n","import { tsx, create } from '@dojo/framework/core/vdom';\nimport Post from '../templates/blog-post/BlogPost';\n\nimport * as css from './Blog.m.css';\n\nconst factory = create().properties<{ path: string }>();\n\nexport default factory(({ properties }) => {\n  const { path } = properties();\n\n  return (\n    <div classes={[ css.root ]}>\n      <Post key={path} path={path} />\n    </div>\n  );\n});\n\n","`!has('build-elide')`;\nimport 'intersection-observer';\nimport wrapper from './util/wrapper';\n\nexport default wrapper('IntersectionObserver', true) as typeof IntersectionObserver;\n","import WeakMap from '../../shim/WeakMap';\nimport IntersectionObserver from '../../shim/IntersectionObserver';\nimport { create, node, invalidator, destroy } from '../vdom';\nimport cache from './cache';\nimport {\n\tIntersectionResult,\n\tIntersectionGetOptions,\n\tIntersectionDetail,\n\tExtendedIntersectionObserverEntry\n} from '../meta/Intersection';\n\nconst defaultIntersection: IntersectionResult = Object.freeze({\n\tintersectionRatio: 0,\n\tisIntersecting: false\n});\n\nconst factory = create({ cache, node, invalidator, destroy });\n\nexport const intersection = factory(({ middleware: { cache, node, invalidator, destroy } }) => {\n\tconst handles: Function[] = [];\n\tdestroy(() => {\n\t\tlet handle: any;\n\t\twhile ((handle = handles.pop())) {\n\t\t\thandle && handle();\n\t\t}\n\t});\n\n\tfunction _createDetails(options: IntersectionGetOptions, rootNode?: HTMLElement): IntersectionDetail {\n\t\tconst entries = new WeakMap<HTMLElement, ExtendedIntersectionObserverEntry>();\n\t\tconst observer = new IntersectionObserver(_onIntersect(entries), {\n\t\t\t...options,\n\t\t\troot: rootNode\n\t\t});\n\t\tconst details = { observer, entries, ...options };\n\t\tcache.set(JSON.stringify(options), details);\n\t\thandles.push(() => observer.disconnect());\n\t\treturn details;\n\t}\n\n\tfunction _getDetails(options: IntersectionGetOptions = {}): IntersectionDetail | undefined {\n\t\treturn cache.get(JSON.stringify(options));\n\t}\n\n\tfunction _onIntersect(detailEntries: WeakMap<Element, IntersectionResult>) {\n\t\treturn (entries: ExtendedIntersectionObserverEntry[]) => {\n\t\t\tfor (const { intersectionRatio, isIntersecting, target } of entries) {\n\t\t\t\tdetailEntries.set(target, { intersectionRatio, isIntersecting });\n\t\t\t}\n\t\t\tinvalidator();\n\t\t};\n\t}\n\n\treturn {\n\t\tget(key: string | number, options: IntersectionGetOptions = {}): IntersectionResult {\n\t\t\tlet rootNode: HTMLElement | undefined;\n\t\t\tif (options.root) {\n\t\t\t\trootNode = node.get(options.root) as HTMLElement;\n\t\t\t\tif (!rootNode) {\n\t\t\t\t\treturn defaultIntersection;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst domNode = node.get(key) as HTMLElement | null;\n\t\t\tif (!domNode) {\n\t\t\t\treturn defaultIntersection;\n\t\t\t}\n\n\t\t\tlet details = _getDetails(options) || _createDetails(options, rootNode);\n\t\t\tif (!details.entries.get(domNode)) {\n\t\t\t\tdetails.entries.set(domNode, defaultIntersection);\n\t\t\t\tdetails.observer.observe(domNode);\n\t\t\t}\n\n\t\t\treturn details.entries.get(domNode) || defaultIntersection;\n\t\t}\n\t};\n});\n\nexport default intersection;\n","import { tsx, create } from '@dojo/framework/core/vdom';\nimport icache from '@dojo/framework/core/middleware/icache';\nimport intersection from '@dojo/framework/core/middleware/intersection';\n\nimport Link from '@dojo/framework/routing/Link';\n\nimport { dateFormatter } from '../../utils/formatter';\n\nimport * as css from './Card.m.css';\n\ninterface CardProperties {\n\tauthor?: string;\n\ttitle: string;\n\tdate: string;\n\tdescription: string;\n\tcover_image: string;\n\tpath: string;\n}\n\nconst factory = create({ icache, intersection }).properties<CardProperties>();\n\nconst FALLBACK_IMG = '/assets/blog/fallback.jpg';\n\nexport default factory(({ properties, middleware: { icache, intersection } }) => {\n  const { title, date, description, path, cover_image } = properties();\n  const key = `$intersect-${title.replace(' ', '-')}`;\n  const { isIntersecting } = intersection.get(key);\n  const viewed = icache.getOrSet('viewed', false);\n  const imgSrc = (isIntersecting || viewed) ? cover_image : FALLBACK_IMG;\n  if (isIntersecting) {\n    icache.set('viewed', true);\n  }\n  return (\n    <section classes={[ css.root ]} key={key}>\n      <div classes={[ css.column ]}>\n        <Link\n          classes={[css.link]}\n          to=\"blog\"\n          params={{\n            path: path.replace('posts/', '').replace('.md', '')\n          }}\n        >\n          {title}\n        </Link>\n        <p>{dateFormatter(new Date(date))}</p>\n        <span>{description}</span>\n      </div>\n      <div classes={[ css.column ]}>\n        <Link\n          classes={[css.link]}\n          to=\"blog\"\n          aria-label={description}\n          params={{\n            path: path.replace('posts/', '').replace('.md', '')\n          }}\n        >\n          <picture>\n            <source type=\"image/webp\" srcset={imgSrc.replace(/\\.(jpg|png)/, '.webp')}/>\n            <source type=\"image/jpeg\" srcset={imgSrc}/>\n            <img alt={description} loading=\"lazy\" classes={[ css.image ]} src={imgSrc} />\n          </picture>\n        </Link>\n      </div>\n    </section>\n  );\n});\n","var modulePath = 'src/blocks/compile-blog-index.block';\nimport has from '@dojo/framework/core/has';\nimport global from '@dojo/framework/shim/global';\n\nexport default function () {\n\tvar args = Array.prototype.slice.call(arguments);\n\t/** @preserve {{ REPLACE }} **/\n\tif (has('build-time-render') && global.__dojoBuildBridge) {\n\t\treturn global.__dojoBuildBridge(modulePath, args);\n\t}\n\telse {\n\t\tvar stringifiedArgs = JSON.stringify(args);\n\t\tif (global.__dojoBuildBridgeCache &&\n\t\t\tglobal.__dojoBuildBridgeCache[modulePath] &&\n\t\t\tglobal.__dojoBuildBridgeCache[modulePath][stringifiedArgs]\n\t\t) {\n\t\t\treturn global.__dojoBuildBridgeCache[modulePath][stringifiedArgs]();\n\t\t}\n\t\treturn undefined;\n\t}\n}\n","import { tsx, create } from '@dojo/framework/core/vdom';\nimport block from '@dojo/framework/core/middleware/block';\n\nimport Card from '../widgets/card/Card';\nimport compileBlogIndex from '../blocks/compile-blog-index.block';\n\nconst factory = create({ block });\n\nexport default factory(({ middleware: { block } }) => {\n    const blogs = block(compileBlogIndex)({}) || [];\n    return (\n        <virtual>\n            {blogs.map((blog) => <Card key={blog.file} path={blog.file} {...blog.meta} />)}\n        </virtual>\n    );\n});\n","import { tsx, create } from '@dojo/framework/core/vdom';\n// import has from '@dojo/framework/core/has';\n\nimport * as css from './Footer.m.css';\n\nimport { FooterLink } from '../../interfaces';\n\ninterface FooterProperties {\n  footerLinks: FooterLink[];\n  author: string;\n}\n\nconst dateFormatter = new Intl.DateTimeFormat('en-US');\n\nfunction asImage({logo, text}: Pick<FooterLink, 'logo' | 'text'>) {\n  return (\n    <picture>\n      <source type=\"image/webp\" srcset={logo?.replace(/\\.(jpg|png)/, '.webp')}/>\n      <source type=\"image/jpeg\" srcset={logo}/>\n      <img alt={text} loading=\"lazy\" classes={[ css.logo ]} src={logo} />\n    </picture>\n  );\n}\n\nfunction createLinks(links: FooterLink[]) {\n  return links.map(({ href, text, logo }) => (\n    <a classes={[css.link]} key={href} href={href} rel=\"noopener noreferrer\" target=\"_blank\" aria-label={text}>\n      {logo ? asImage({logo, text}) : <virtual><br />{text}</virtual>}\n    </a>\n  ));\n}\n\nconst factory = create().properties<FooterProperties>();\n\nexport default factory(({ properties }) => {\n  const { author, footerLinks } = properties();\n  const d = new Date();\n  // const buildTime = has('build-time-render') ? dateFormatter.format(d) : null;\n  // const name = has('build-time-render') ? author : null;\n  const buildTime = dateFormatter.format(d);\n  const name = author;\n  const links = createLinks(footerLinks);\n  return (\n    <footer key=\"footer\" classes={[css.root]}>\n      <span>&copy; {`${d.getFullYear()}, ${name}`}</span>\n      <br />\n      <div>\n      {links}\n      </div>\n      <br />\n      <span classes={[css.details]} key=\"footer\">\n        Last build: {`${buildTime}`}\n      </span>\n      <br />\n    </footer>\n  );\n});\n","import { tsx, create } from '@dojo/framework/core/vdom';\n\nimport Link from '@dojo/framework/routing/Link';\n\nimport * as css from './Header.m.css';\n\nconst factory = create().properties<{ title: string }>();\n\nexport default factory(({ properties }) => {\n  const { title } = properties() || 'My Site';\n  return (\n    <header classes={[css.root]}>\n      <div classes={[css.title]}>\n        <Link to=\"/\" isOutlet={false} classes={[css.link]}>\n          {title}\n        </Link>\n      </div>\n    </header>\n  );\n});\n","import { tsx, create } from '@dojo/framework/core/vdom';\n\nimport * as css from './Hero.m.css';\n\nconst factory = create().properties<{ description: string }>();\n\nexport default factory(({ properties }) => {\n  const { description } = properties();\n  return (\n    <div classes={[css.root]}>\n    <picture>\n      <source\n        type=\"image/webp\"\n        srcset=\"\n        /assets/images/learn-dojo-jumbotron-320.webp 320w,\n        /assets/images/learn-dojo-jumbotron-640.webp 640w,\n        /assets/images/learn-dojo-jumbotron-768.webp 768w,\n        /assets/images/learn-dojo-jumbotron-1024.webp 1024w,\n        /assets/images/learn-dojo-jumbotron-1366.webp 1366w,\n        /assets/images/learn-dojo-jumbotron-1600.webp 1600w,\n        /assets/images/learn-dojo-jumbotron-1920.webp 1920w\n      \"/>\n      <source\n        type=\"image/jpeg\"\n        srcset=\"\n        /assets/images/learn-dojo-jumbotron-320.jpg 320w,\n        /assets/images/learn-dojo-jumbotron-640.jpg 640w,\n        /assets/images/learn-dojo-jumbotron-768.jpg 768w,\n        /assets/images/learn-dojo-jumbotron-1024.jpg 1024w,\n        /assets/images/learn-dojo-jumbotron-1366.jpg 1366w,\n        /assets/images/learn-dojo-jumbotron-1600.jpg 1600w,\n        /assets/images/learn-dojo-jumbotron-1920.jpg 1920w\n      \"/>\n      <img alt={description} loading=\"lazy\" classes={[ css.image ]} src=\"/assets/images/learn-dojo-jumbotron-lg.jpg\" />\n    </picture>\n      <h3 classes={[css.description]}>{description}</h3>\n    </div>\n  );\n});\n","import { tsx, create } from '@dojo/framework/core/vdom';\n\nimport * as css from './SignUp.m.css';\n\nconst factory = create();\n\nexport default factory(() => (\n  <aside classes={[ css.root ]}>\n    <div classes={[ css.email ]}>\n      <form\n        classes={[ css.form ]}\n        action=\"https://odoe.us9.list-manage.com/subscribe/post?u=711bff655927baa32886103d5&amp;id=6d978f8bcf\"\n        method=\"post\"\n        id=\"mc-embedded-subscribe-form\"\n        name=\"mc-embedded-subscribe-form\"\n        target=\"_blank\"\n        novalidate\n      >\n        <div classes={[ css.gridcontainer ]}>\n          <div classes={[ css.column ]}>\n            <h3 classes={[ css.title ]}>\n              <strong>Subscribe to newsletter</strong>\n            </h3>\n            <div>\n              <label for=\"mce-EMAIL\">Your email</label>\n              <input\n                placeholder=\"Your email\"\n                type=\"email\"\n                value=\"\"\n                name=\"EMAIL\"\n                classes={[ css.input ]}\n                id=\"mce-EMAIL\"\n              />\n            </div>\n            <div>\n              <label for=\"mce-FNAME\">Your first name</label>\n              <input\n                placeholder=\"Your first name\"\n                type=\"text\"\n                value=\"\"\n                name=\"FNAME\"\n                classes={[ css.input ]}\n                id=\"mce-FNAME\"\n              />\n            </div>\n            <button classes={[css.submit]} type=\"submit\">Subscribe</button>\n            <div classes={[ css.info ]}>\n              <p>\n                We use Mailchimp as our marketing platform. By clicking below to subscribe, you\n                acknowledge that your information will be transferred to Mailchimp for\n                processing.{' '}\n                <a classes={[css.link]} href=\"https://mailchimp.com/legal/\" rel=\"noopener noreferrer\" target=\"_blank\" aria-label=\"Learn more about Mailchimp's privacy practices here\">\n                  Learn more about Mailchimp's privacy practices here.\n                </a>\n              </p>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </aside>\n));\n","import { tsx, create } from '@dojo/framework/core/vdom';\n\nimport Footer from '../widgets/footer/Footer';\nimport Header from '../widgets/header/Header';\nimport Hero from '../widgets/hero/Hero';\nimport SignUp from '../widgets/signup/SignUp';\n\nimport * as css from './Layout.m.css';\n\nimport { SiteMeta } from '../interfaces';\n\nconst factory = create().properties<SiteMeta>();\n\nexport default factory(({ children, properties }) => {\n  const { title, description, author, footerLinks } = properties();\n\n  return (\n    <div classes={[ css.root ]}>\n      <Header title={title} />\n      <Hero description={description} />\n      <main classes={[ css.section ]}>{children()}</main>\n      <SignUp />\n      <Footer {...{ author, footerLinks }} />\n    </div>\n  );\n});\n\n","import { tsx, create } from '@dojo/framework/core/vdom';\nimport Outlet from '@dojo/framework/routing/Outlet';\n\nimport Blog from './pages/Blog';\nimport BlogList from './blog-list/BlogList';\n\nimport Layout from './layouts/Layout';\n\nimport { AppProperties } from './interfaces';\n\nconst factory = create().properties<AppProperties>();\n\nexport default factory(({ properties }) => {\n  const { siteMeta } = properties();\n  return (\n    <Layout { ...siteMeta}>\n      <Outlet\n        id=\"blog\"\n        renderer={(matchDetails) => {\n          const { params } = matchDetails;\n          if (params.path && params.path !== '') {\n            return <Blog path={params.path} />;\n          }\n          return <BlogList />;\n        }}\n      />\n    </Layout>\n  );\n});\n","import renderer, { tsx } from '@dojo/framework/core/vdom';\nimport Registry from '@dojo/framework/core/Registry';\nimport { registerRouterInjector } from '@dojo/framework/routing/RouterInjector';\nimport { StateHistory } from '@dojo/framework/routing/history/StateHistory';\n\nimport { meta, routes } from './site-config';\nimport App from './App';\n\nconst registry = new Registry();\nconst router = registerRouterInjector(routes, registry, { HistoryManager: StateHistory });\n\nconst r = renderer(() => <App siteMeta={meta} />);\nconst domNode = document.getElementById('root') as HTMLElement;\nr.mount({ registry, domNode });\n\nrouter.on('nav', () => scroll(0, 0));\n","import { Registry } from '../core/Registry';\nimport { RegistryLabel } from '../core/interfaces';\n\nimport { Router } from './Router';\nimport { RouteConfig, RouterOptions } from './interfaces';\n\n/**\n * Router Injector Options\n *\n */\nexport interface RouterInjectorOptions extends RouterOptions {\n\tkey?: RegistryLabel;\n}\n\n/**\n * Creates a router instance for a specific History manager (default is `HashHistory`) and registers\n * the route configuration.\n *\n * @param config The route config to register for the router\n * @param registry An optional registry that defaults to the global registry\n * @param options The router injector options\n */\nexport function registerRouterInjector(\n\tconfig: RouteConfig[],\n\tregistry: Registry,\n\toptions: RouterInjectorOptions = {}\n): Router {\n\tconst { key = 'router', ...routerOptions } = options;\n\n\tif (registry.hasInjector(key)) {\n\t\tthrow new Error('Router has already been defined');\n\t}\n\tconst router = new Router(config, routerOptions);\n\tregistry.defineInjector(key, (invalidator: () => void) => {\n\t\trouter.on('nav', () => invalidator());\n\t\treturn () => router;\n\t});\n\treturn router;\n}\n","import global from '../global';\nimport has from '../../core/has';\n\nexport default function wrapper(nameOnGlobal: string, constructor = false, bind = false): any {\n\tif (has('test')) {\n\t\tif (constructor) {\n\t\t\treturn function(...args: any[]) {\n\t\t\t\treturn new global[nameOnGlobal](...args);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(...args: any[]) {\n\t\t\t\treturn global[nameOnGlobal](...args);\n\t\t\t};\n\t\t}\n\t}\n\n\treturn bind ? global[nameOnGlobal].bind(global) : global[nameOnGlobal];\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"learn-dojo/Article\",\"root\":\"Article-m__root__5737d01D5nz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"learn-dojo/Blog\",\"root\":\"Blog-m__root__5737d01B0aR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"learn-dojo/Card\",\"root\":\"Card-m__root__5737d017FRC\",\"column\":\"Card-m__column__5737d0F3MAx\",\"link\":\"Card-m__link__5737d0OSq7H\",\"image\":\"Card-m__image__5737d0igC96\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"learn-dojo/Footer\",\"root\":\"Footer-m__root__5737d01zPMX\",\"details\":\"Footer-m__details__5737d02pZwP\",\"logo\":\"Footer-m__logo__5737d02kD38\",\"link\":\"Footer-m__link__5737d03-JoA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"learn-dojo/Header\",\"root\":\"Header-m__root__5737d015XcQ\",\"title\":\"Header-m__title__5737d03OSiY\",\"link\":\"Header-m__link__5737d02GEKH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"learn-dojo/Hero\",\"root\":\"Hero-m__root__5737d012HF4\",\"image\":\"Hero-m__image__5737d02nrHx\",\"description\":\"Hero-m__description__5737d03I4v5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"learn-dojo/SignUp\",\"root\":\"SignUp-m__root__5737d01pvR6\",\"title\":\"SignUp-m__title__5737d02WSYN\",\"email\":\"SignUp-m__email__5737d020Zk1\",\"form\":\"SignUp-m__form__5737d01C66N\",\"gridcontainer\":\"SignUp-m__gridcontainer__5737d01Rne0\",\"column\":\"SignUp-m__column__5737d01NIGa\",\"gdpr\":\"SignUp-m__gdpr__5737d01Y92a\",\"gdprcheck\":\"SignUp-m__gdprcheck__5737d02qi1q\",\"checkbox\":\"SignUp-m__checkbox__5737d01sBso\",\"info\":\"SignUp-m__info__5737d03AU2H\",\"input\":\"SignUp-m__input__5737d02oS1c\",\"fieldset\":\"SignUp-m__fieldset__5737d02wCAE\",\"link\":\"SignUp-m__link__5737d03d58p\",\"submit\":\"SignUp-m__submit__5737d02mNG6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"learn-dojo/Layout\",\"root\":\"Layout-m__root__5737d03l2TO\",\"section\":\"Layout-m__section__5737d01sUgf\"};"],"sourceRoot":""}